{"version":3,"sources":["components/HomeSection/HomeSection.js","reducer/login.js","components/Book/Book.js","components/BookList/BookList.js","components/HomeContent/HomeContent.js","reducer/books.js","route/Home.js","components/SocialLogin/SocialLogin.js","components/LoginForm/LoginForm.js","route/Login.js","components/SignUpForm/SignUpForm.js","reducer/signup.js","route/SignUp.js","components/UserEdit/UserEdit.js","reducer/review.js","components/ReviewModal/ReviewModal.js","components/ReviewModal/index.js","components/UserReview/UserReview.js","components/UserProfile/UserProfile.js","reducer/user.js","route/Profile.js","components/Rater/Rater.js","components/Review/Review.js","components/BookDetail/BookDetail.js","route/Detail.js","components/Footer/Footer.js","route/Search.js","route/Edit.js","reducer/upload.js","components/BookUpload/BookUpload.js","route/Upload.js","components/SearchBar/SearchBar.js","components/Header/Header.js","route/NoMatch.js","components/BookModal/Modal.js","components/BookShelve/BookShelve.js","components/Category/Category.js","components/CommunityContainer/CommunityContainer.js","route/Community.js","App.js","serviceWorker.js","reducer/shelve.js","reducer/index.js","store/configure.js","index.js","img/1.jpg","img/go_back.png"],"names":["cx","classname","bind","style","HomeSection","className","requestLogin","id","pw","axios","post","email","password","requestCheck","atk","create","headers","Authorization","requsetPostShelve","isbn","title","authors","type","thumbnail","requestLikeReview","uid","m_id","requestDeleteShelve","bid","check","payload","postShelve","postLike","handleActions","state","action","pending","error","profile","data","isLoggedIn","success","classnames","connect","login","dispatch","actions","props","from","useState","isOpen","setOpen","formatAuthors","format","forEach","ele","book","src","alt","url","undefined","split","to","isMe","window","location","pathname","handleChange","e","a","value","target","console","log","margin","onClick","handleEdit","defaultValue","onChange","editTags","BookList","this","booklist","map","key","v4","color","size","Component","HomeContent","requestpostBook","vote","name","requestgetBooks","query","page","api","parseInt","get","requestInfo","getBooks","getMore","books","documents","vote_pending","vote_error","vote_success","votes","total","Home","scrollTo","SocialLogin","LoginForm","handleSubmit","preventDefault","loginRequest","handleEmail","p","setState","handlePassword","onSubmit","placeholder","required","Login","saveATK","t","localStorage","setItem","handleLogin","response","status","token","login_error","login_pending","login_success","SignUpForm","p1","p2","handleSignUp","q","handlePassword1","handlePassword2","requestSignUp","SignUp","history","push","signup_error","signup","signup_pending","signup_success","UserEdit","submitEdit","seletedImg","nickname","website","interest","intro","formData","FormData","append","href","handleFile","files","file","render","URL","createObjectURL","document","querySelector","readURL","handleNickName","val","handleWebSite","handleInterest","handleIntro","handleClose","role","aria-label","position","requestGetReview","requestPostReview","content","requestEditReview","rid","reviews","ReviewModal","checkUser","getItem","editReview","review","_id","userActions","reviewActions","UserReview","handleLike","currentTarget","getAttribute","handleDelete","me","getReview","mid","moment","createdAt","display","alignItems","marginTop","likes","data-value","getList","length","user","uploaded","UserProfile","idx","handleOpen","handleCancel","avatarUrl","im","marginLeft","want_read","reading","read","openEdit","requestUser","requestTopReaders","requestTopReviewers","getUser","getTopReaders","getTopReviewers","readers","topReaders","reviewers","topReviewers","Profile","getProfile","substring","values","starStyle","cursor","Rater","handleOnClick","currentItem","nodeName","parentNode","rating","dataset","postVote","alert","hoveredRating","currentRating","data-rating","Review","getReviews","postReview","input","prevProps","item","reviewer","marginRight","reviewTag","loginActions","options","label","BookDetail","checkStatus","arr","filter","checkUserVote","cur","i","String","getStatus","selected","handleRadio","s","toFixed","getAvg","contents","isSearchable","Detail","avg_vote","getBook","getAvg_Reviews","Promise","all","match","params","Footer","form","height","width","text","padding","fontSize","Search","getMoreBooks","handleScroll","innerHeight","scrollHeight","body","scrollTop","documentElement","search","decodeURI","replace","keyword","isSubmited","handleAll","handleBook","handleAuthor","addEventListener","removeEventListener","paddingTop","fontWeight","checked","searchResult","Edit","requestUpload","BookUpload","author","submitData","handleAuthorChange","handleKeyPress","handleDeleteTag","previousSibling","innerHTML","newAuthors","imgURL","handleTitle","handleContents","handleIsbn","postUpload","authorTag","onKeyDown","keyCode","upload","Upload","withRouter","setKeyword","menu","showMenu","requestLogOut","Header","_isMounted","lastPos","pageYOffset","isLogOut","userLogOut","removeItem","clickMenu","currentScrollPos","classList","remove","add","borderRadius","LinkContainer","bookActions","textAlign","NoMatch","marginBottom","goBack","convertType","읽음","읽기","읽는중","Modal","setTo","shelveHeader","active","BookShelve","menu_ul","posY","getBoundingClientRect","top","contains","tmp","hash","checkType","concat","sort","b","handleSettings","deleteShelve","handleClick","inactive","innerText","openModal","Category","path","info","handleType","data-role","border","reader","CommunityContainer","Community","substr","App","exact","component","Boolean","hostname","reducer","combineReducers","shelve","customizePromiseMiddleware","createPromise","promiseTypeSuffixes","store","createStore","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.dae182f5.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./HomeSection.scss\";\nimport classname from \"classnames/bind\";\nconst cx = classname.bind(style);\nconst HomeSection = () => {\n  return (\n    <div className={cx(\"home-section\")}>\n      <div className={cx(\"words\")}>\n        <h3>With Happyness</h3>\n        <h4>책을 공유 하고 자신의 인생 책을 찾아보세요</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default HomeSection;\n","import { handleActions } from \"redux-actions\";\nimport axios from \"axios\";\n\nconst USER_CHECK = \"USER_CHECK\";\nconst USER_CHECK_PENDING = \"USER_CHECK_PENDING\";\nconst USER_CHECK_SUCCESS = \"USER_CHECK_SUCCESS\";\nconst USER_CHECK_FAILURE = \"USER_CHECK_FAILURE\";\n\nconst LOGIN = \"LOGIN\";\nconst LOGIN_PENDING = \"LOGIN_PENDING\";\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nconst LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nconst LOGOUT = \"LOGOUT\";\nconst LOGOUT_PENDING = \"LOGOUT_PENDING\";\nconst LOGOUT_SUCCESS = \"LOGOUR_SUCCESS\";\nconst LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\n\nconst POST_SHELVE = \"POST_SHELVE\";\nconst POST_SHELVE_PENDING = \"POST_SHELVE_PENDING\";\nconst POST_SHELVE_SUCCESS = \"POST_SHELVE_SUCCESS\";\nconst POST_SHELVE_FAILURE = \"POST_SHELVE_FAILURE\";\n\nconst LIKE_REVIEW = \"LIKE_REVIEW\";\nconst LIKE_REVIEW_PENDING = \"LIKE_REVIEW_PENDING\";\nconst LIKE_REVIEW_SUCCESS = \"LIKE_REVIEW_SUCCESS\";\nconst LIKE_REVIEW_FAILURE = \"LIKE_REVIEW_FAILURE\";\n\nconst DELETE_SHELVE = \"DELETE_SHELVE\";\nconst DELETE_SHELVE_PENDING = \"DELETE_SHELVE_PENDING\";\nconst DELETE_SHELVE_SUCCESS = \"DELETE_SHELVE_SUCCESS\";\nconst DELETE_SHELVE_FAILURE = \"DELETE_SHELVE_FAILURE\";\n\nconst requestLogin = (id, pw) => {\n  return axios.post(`http://localhost:8080/login`, {\n    email: id,\n    password: pw\n  });\n};\nconst requestLogout = () => {\n  return axios.post(`http://localhost:8080/logout`);\n};\nconst requestCheck = atk => {\n  const api = axios.create({\n    headers: {\n      Authorization: `${atk}`\n    }\n  });\n  return api.post(`http://localhost:8080/profile`);\n};\n\nconst requsetPostShelve = (email, isbn, title, authors, type, thumbnail) => {\n  return axios.post(`http://localhost:8080/shelve`, {\n    email,\n    isbn,\n    title,\n    authors,\n    type,\n    thumbnail\n  });\n};\nconst requestLikeReview = (type, id, uid, m_id) => {\n  return axios.post(`http://localhost:8080/review/like`, {\n    type,\n    id,\n    uid,\n    m_id\n  });\n};\nconst requestDeleteShelve = (uid, bid, type) => {\n  return axios.post(`http://localhost:8080/shelve/${bid}`, {\n    uid,\n    type\n  });\n};\nexport const check = atk => ({\n  type: USER_CHECK,\n  payload: requestCheck(atk)\n});\nexport const logout = () => ({\n  type: LOGOUT,\n  payload: requestLogout()\n});\nexport const login = (id, pw) => ({\n  type: LOGIN,\n  payload: requestLogin(id, pw)\n});\nexport const postShelve = (email, isbn, title, authors, type, thumbnail) => ({\n  type: POST_SHELVE,\n  payload: requsetPostShelve(email, isbn, title, authors, type, thumbnail)\n});\nexport const postLike = (type, id, uid, m_id) => ({\n  type: LIKE_REVIEW,\n  payload: requestLikeReview(type, id, uid, m_id)\n});\nexport const deleteShelve = (uid, bid, type) => ({\n  type: DELETE_SHELVE,\n  payload: requestDeleteShelve(uid, bid, type)\n});\nconst initialState = {\n  pending: false,\n  error: false,\n  success: false,\n  profile: {},\n  isLoggedIn: false\n};\n\nexport default handleActions(\n  {\n    //LOGIN\n    [LOGIN_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [LOGIN_SUCCESS]: (state, action) => {\n      return {\n        profile: action.payload.data,\n        pending: false,\n        error: false,\n        isLoggedIn: true\n      };\n    },\n    [LOGIN_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true,\n        isLoggedIn: false\n      };\n    },\n    //USER_CHECK\n    [USER_CHECK_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false,\n        isLoggedIn: false\n      };\n    },\n    [USER_CHECK_SUCCESS]: (state, action) => {\n      return {\n        pending: false,\n        error: false,\n        isLoggedIn: true,\n        profile: action.payload.data\n      };\n    },\n    [USER_CHECK_FAILURE]: (state, action) => {\n      return {\n        pending: false,\n        error: true,\n        isLoggedIn: false\n      };\n    },\n    //LOGOUT\n    [LOGOUT_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false,\n        isLoggedIn: false\n      };\n    },\n    [LOGOUT_SUCCESS]: (state, action) => {\n      return {\n        pending: false,\n        error: false,\n        isLoggedIn: false,\n        profile: {}\n      };\n    },\n    [LOGOUT_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    },\n    //POST_SHELVE\n    [POST_SHELVE_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [POST_SHELVE_SUCCESS]: (state, action) => {\n      const { data } = action.payload;\n      return {\n        ...state,\n        pending: false,\n        error: false,\n        profile: data\n      };\n    },\n    [POST_SHELVE_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    },\n    ///LIKE_REVIEW\n    [LIKE_REVIEW_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [LIKE_REVIEW_SUCCESS]: (state, action) => {\n      const { data } = action.payload;\n      return {\n        ...state,\n        pending: false,\n        error: false,\n        success: true,\n        profile: data\n      };\n    },\n    [LIKE_REVIEW_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    },\n    [DELETE_SHELVE_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [DELETE_SHELVE_SUCCESS]: (state, action) => {\n      const { data } = action.payload;\n      return {\n        ...state,\n        profile: data,\n        pending: false,\n        error: false\n      };\n    },\n    [DELETE_SHELVE_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    }\n  },\n  initialState\n);\n","import React, { useState, Fragment } from \"react\";\nimport style from \"./Book.scss\";\nimport classnames from \"classnames/bind\";\nimport { Link } from \"react-router-dom\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../reducer/login\";\nconst cx = classnames.bind(style);\nconst Book = props => {\n  const {\n    from,\n    type,\n    profile: { profile },\n    postShelve\n  } = props;\n  const [isOpen, setOpen] = useState(false);\n  //useEffect(() => {}, [profile.reading, profile.want_read, profile.read]);\n  const formatAuthors = authors => {\n    let format = \"\";\n    authors.forEach(ele => {\n      format += ele;\n    });\n    return format;\n  };\n  if (from === \"home\") {\n    const { book } = props;\n    return (\n      <div className={cx(\"book\")}>\n        <img src={book.thumbnail} alt=\"book\" />\n        <p>{book.title}</p>\n      </div>\n    );\n  } else if (from === \"search\") {\n    const { book } = props;\n    const url =\n      book && book.isbn !== undefined ? book.isbn.split(\" \") : undefined;\n    return (\n      <li className={cx(\"ser-bg\")}>\n        <div className={cx(\"ser-book\")}>\n          <Link\n            to={\n              url !== undefined\n                ? url[0] !== \"\"\n                  ? `/book/${book.isbn.split(\" \")[0]}`\n                  : `/book/${book.isbn.split(\" \")[1]}`\n                : \"\"\n            }\n          >\n            <img src={book.thumbnail} alt=\"book\" />\n          </Link>\n        </div>\n        <div className={cx(\"ser-info\")}>\n          <Link\n            to={\n              url !== undefined\n                ? url[0] !== \"\"\n                  ? `/book/${book.isbn.split(\" \")[0]}`\n                  : `/book/${book.isbn.split(\" \")[1]}`\n                : \"\"\n            }\n          >\n            <h3 className={cx(\"ser-title\")}>{book.title}</h3>\n          </Link>\n          <p>\n            <span className={cx(\"ser-author\")}>\n              {formatAuthors(book.authors)}\n            </span>\n          </p>\n        </div>\n      </li>\n    );\n  } else if (from === \"profile\") {\n    const {\n      book: { book }\n    } = props;\n\n    const isMe = window.location.pathname === \"/me\";\n    const url =\n      book && book.isbn !== undefined ? book.isbn.split(\" \") : undefined;\n    const handleChange = async e => {\n      const {\n        target: { value }\n      } = e;\n      //서버에 수정 요청 전송 코드입력\n      try {\n        await postShelve(\n          profile.email,\n          book.isbn,\n          book.title,\n          book.authors,\n          value,\n          book.thumbnail\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const editTags = type => {\n      return (\n        <div className={cx(\"edit-form\")}>\n          <select defaultValue={type} onChange={handleChange}>\n            <option value={\"want_read\"}>읽을 책</option>\n            <option value={\"reading\"}>읽\b고 있음</option>\n            <option value={\"read\"}>읽음</option>\n          </select>\n        </div>\n      );\n    };\n    const handleDelete = () => {\n      console.log(\"Delete\");\n    };\n    const handleEdit = (isOpen, setOpen) => {\n      setOpen(!isOpen);\n    };\n    return (\n      <div className={cx(\"shelve\")} style={{ margin: \"10px\" }}>\n        <Link\n          to={\n            url !== undefined\n              ? url[0] !== \"\"\n                ? `/book/${book.isbn.split(\" \")[0]}`\n                : `/book/${book.isbn.split(\" \")[1]}`\n              : \"\"\n          }\n        >\n          <span className={cx(\"title\")}>{book.title}</span>\n          <span className={cx(\"authors\")}>\n            지은이: {book.authors ? formatAuthors(book.authors) : \"\"}\n          </span>\n        </Link>\n        {isMe ? (\n          <div className={cx(\"setting-btns\")}>\n            <div className={cx(\"edit-container\")}>\n              <span\n                className={cx(\"edit\")}\n                onClick={() => handleEdit(isOpen, setOpen)}\n              >\n                <FaEdit />\n              </span>\n              {isOpen ? editTags(type) : <Fragment />}\n            </div>\n            <div>\n              <span className={cx(\"delete\")} onClick={() => handleDelete()}>\n                <FaTrash />\n              </span>\n            </div>\n          </div>\n        ) : (\n          <Fragment />\n        )}\n      </div>\n    );\n  }\n};\nconst mapStateToProps = state => {\n  return {\n    profile: state.login.profile\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    postShelve: (email, isbn, title, authors, type, thumbnail) =>\n      dispatch(actions.postShelve(email, isbn, title, authors, type, thumbnail))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);\n","import React, { Component } from \"react\";\nimport style from \"./BookList.scss\";\nimport classnames from \"classnames/bind\";\nimport Book from \"../Book/Book\";\nimport { Link } from \"react-router-dom\";\nimport { ChasingDots } from \"better-react-spinkit\";\nimport { v4 } from \"uuid\";\nimport { connect } from \"react-redux\";\nconst cx = classnames.bind(style);\nclass BookList extends Component {\n  render() {\n    const { from, booklist, type } = this.props;\n    if (from === \"home\") {\n      return (\n        <div className={cx(\"book-list\")}>\n          {booklist ? (\n            booklist.map(book => {\n              const url = (book.isbn && book.isbn.split(\" \")) || \"\";\n              return (\n                <Link\n                  to={\n                    url[0] !== \"\"\n                      ? `/book/${(book.isbn && book.isbn.split(\" \")[0]) || \"\"}`\n                      : `/book/${(book.isbn && book.isbn.split(\" \")[1]) || \"\"}`\n                  }\n                  key={v4()}\n                >\n                  <Book book={book} from={from} />\n                </Link>\n              );\n            })\n          ) : (\n            <ChasingDots color=\"white\" size={60} />\n          )}\n        </div>\n      );\n    } else if (from === \"search\") {\n      return (\n        <div>\n          <ul className={cx(\"ser-ul\")}>\n            {booklist.map(book => {\n              return <Book book={book} from={from} key={v4()} />;\n            })}\n          </ul>\n        </div>\n      );\n    } else if (from === \"profile\") {\n      //const [bookState,setBookState] = useState(booklist);\n      return (\n        <div>\n          <ul>\n            {booklist.map(book => {\n              return <Book book={book} from={from} key={v4()} type={type} />;\n            })}\n          </ul>\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect(null, null)(BookList);\n","import React from \"react\";\nimport style from \"./HomeContent.scss\";\nimport classnames from \"classnames/bind\";\nimport BookList from \"../BookList\";\nconst cx = classnames.bind(style);\nconst HomeContent = ({ booklist }) => {\n  return (\n    <div className={cx(\"home-content\")}>\n      <div className={cx(\"books-wrapper\")}>\n        <BookList booklist={booklist} from={\"home\"} />\n      </div>\n    </div>\n  );\n};\n\nexport default HomeContent;\n","import { handleActions } from \"redux-actions\";\nimport axios from \"axios\";\n\nconst GET_BOOKS = \"GET_BOOKS\";\nconst GET_BOOKS_PENGIND = \"GET_BOOKS_PENDING\";\nconst GET_BOOKS_SUCCESS = \"GET_BOOKS_SUCCESS\";\nconst GET_BOOKS_FAILURE = \"GET_BOOKS_FAILURE\";\n\nconst GET_SEARCH_BOOKS = \"GET_SEARCH_BOOKS\"; //검색 요청\nconst GET_SEARCH_BOOKS_PENGIND = \"GET_SEARCH_BOOKS_PENDING\";\nconst GET_SEARCH_BOOKS_SUCCESS = \"GET_SEARCH_BOOKS_SUCCESS\";\nconst GET_SEARCH_BOOKS_FAILURE = \"GET_SEARCH_BOOKS_FAILURE\";\n\nconst GET_MORE_BOOKS = \"GET_MORE_BOOKS\";\nconst GET_MORE_BOOKS_PENGIND = \"GET_MORE_BOOKS_PENDING\";\nconst GET_MORE_BOOKS_SUCCESS = \"GET_MORE_BOOKS_SUCCESS\";\nconst GET_MORE_BOOKS_FAILURE = \"GET_MORE_BOOKS_FAILURE\";\n\nconst POST_BOOK = \"POST_BOOK\";\nconst POST_BOOK_PENDING = \"POST_BOOK_PENDING\";\nconst POST_BOOK_SUCCESS = \"POST_BOOK_SUCCESS\";\nconst POST_BOOK_FAILURE = \"POST_BOOK_FAILURE\";\n\nconst GET_VOTE_REVIEW = \"GET_VOTE_REVIEW\";\nconst GET_VOTE_REVIEW_PENDING = \"GET_VOTE_REVIEW_PENDING\";\nconst GET_VOTE_REVIEW_SUCCESS = \"GET_VOTE_REVIEW_SUCCESS\";\nconst GET_VOTE_REVIEW_FAILURE = \"GET_VOTE_REVIEW_FAILURE\";\n\nconst GET_DETAIL = \"GET_DETAIL\";\nconst GET_DETAIL_PENDING = \"GET_DETAIL_PENDING\";\nconst GET_DETAIL_SUCCESS = \"GET_DETAIL_SUCCESS\";\nconst GET_DETAIL_FAILURE = \"GET_DETAIL_FAILURE\";\n\nconst requestAllBooks = () => {\n  return axios.get(`http://localhost:8080/books`);\n};\n\nconst requestpostBook = (title, authors, vote, isbn, name, thumbnail) => {\n  return axios.post(`http://localhost:8080/book/${isbn}`, {\n    title,\n    authors,\n    vote,\n    isbn,\n    name,\n    thumbnail\n  });\n};\n\nconst requestgetBooks = (query, type, page) => {\n  const api = axios.create({\n    headers: {\n      Authorization: `KakaoAK ${\"dcf8990c616ed7f54a7a2fe1ab632c0b\"}`\n    }\n  });\n  if (parseInt(type) === 0)\n    return api.get(\n      `https://dapi.kakao.com/v3/search/book?query=${query}&page=${page}`\n    );\n  else if (parseInt(type) === 1)\n    return api.get(\n      `https://dapi.kakao.com/v3/search/book?target=title&query=${query}&page=${page}`\n    );\n  else if (parseInt(type) === 2)\n    return api.get(\n      `https://dapi.kakao.com/v3/search/book?target=person&query=${query}&page=${page}`\n    );\n  else if (parseInt(type) === 3) {\n    return api.get(\n      `https://dapi.kakao.com/v3/search/book?target=isbn&query=${query}`\n    );\n  }\n};\n\nconst requestInfo = isbn => {\n  return axios.get(`http://localhost:8080/book/${isbn}`);\n};\n\nexport const getAllBooks = () => ({\n  type: GET_BOOKS,\n  payload: requestAllBooks()\n});\n\nexport const postBook = (title, authors, vote, isbn, name, thumbnail) => ({\n  type: POST_BOOK,\n  payload: requestpostBook(title, authors, vote, isbn, name, thumbnail)\n});\n\nexport const getBooks = (query = \" \", type = 0, page = 1) => ({\n  type: GET_SEARCH_BOOKS,\n  payload: requestgetBooks(query, type, page)\n});\nexport const getMore = (query = \"\", type = 0, page = 1) => ({\n  type: GET_MORE_BOOKS,\n  payload: requestgetBooks(query, type, page)\n});\n\nexport const getDetail = query => ({\n  type: GET_DETAIL,\n  payload: requestgetBooks(query, 3, 1)\n});\nexport const getInfo = isbn => ({\n  //getVote\n  type: GET_VOTE_REVIEW,\n  payload: requestInfo(isbn)\n});\n\nconst initialState = {\n  pending: false,\n  error: false,\n  books: [],\n  total: 0,\n  vote_pending: false,\n  vote_error: false,\n  vote_success: false,\n  votes: []\n};\n\nexport default handleActions(\n  {\n    [GET_BOOKS_PENGIND]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [GET_BOOKS_SUCCESS]: (state, action) => {\n      //console.log(action.payload);\n      const { data } = action.payload;\n      return {\n        pending: false,\n        error: false,\n        books: data.books\n      };\n    },\n    [GET_BOOKS_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    },\n    [GET_SEARCH_BOOKS_PENGIND]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [GET_SEARCH_BOOKS_SUCCESS]: (state, action) => {\n      const {\n        data: { documents }\n      } = action.payload;\n      return {\n        ...state,\n        pending: false,\n        error: false,\n        books: [...documents]\n      };\n    },\n    [GET_MORE_BOOKS_PENGIND]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [GET_MORE_BOOKS_SUCCESS]: (state, action) => {\n      const {\n        data: { documents }\n      } = action.payload;\n      return {\n        ...state,\n        pending: false,\n        error: false,\n        books: [...state.books, ...documents]\n      };\n    },\n    [GET_MORE_BOOKS_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    },\n    [POST_BOOK_PENDING]: (state, action) => {\n      return {\n        ...state,\n        vote_pending: true,\n        vote_error: false,\n        vote_success: false\n      };\n    },\n    [POST_BOOK_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n        vote_pending: false,\n        vote_error: false,\n        vote_success: true\n      };\n    },\n    [POST_BOOK_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        vote_pending: false,\n        vote_error: true,\n        vote_success: false\n      };\n    },\n    [GET_VOTE_REVIEW_PENDING]: (state, action) => {\n      return {\n        ...state\n      };\n    },\n    [GET_VOTE_REVIEW_SUCCESS]: (state, action) => {\n      const {\n        data: { votes }\n      } = action.payload;\n      console.log(action.payload);\n      return {\n        ...state,\n        votes\n      };\n    },\n    [GET_VOTE_REVIEW_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        votes: []\n      };\n    },\n    [GET_DETAIL_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [GET_DETAIL_SUCCESS]: (state, action) => {\n      const {\n        data: { documents }\n      } = action.payload;\n      return {\n        pending: true,\n        error: false,\n        books: documents\n      };\n    },\n    [GET_DETAIL_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    }\n  },\n  initialState\n);\n","import React, { Component, Fragment } from \"react\";\nimport HomeSection from \"../components/HomeSection\";\nimport HomeContent from \"../components/HomeContent\";\nimport { ChasingDots } from \"better-react-spinkit\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../reducer/books\";\nclass Home extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.getBooks();\n  }\n  getBooks = async () => {\n    try {\n      await this.props.getBooks();\n      //console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  render() {\n    const { books, pending } = this.props;\n    return (\n      <Fragment>\n        <HomeSection />\n        <main className=\"mainContainer\">\n          {pending ? (\n            <ChasingDots color=\"white\" size={60} />\n          ) : (\n            <HomeContent booklist={books} />\n          )}\n        </main>\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    pending: state.books.pending,\n    error: state.books.error,\n    books: state.books.books\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getBooks: () => dispatch(actions.getAllBooks())\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { Component } from \"react\";\nimport { FaFacebookSquare, FaGithubSquare } from \"react-icons/fa\";\n\nimport style from \"./SocialLogin.scss\";\nimport classnames from \"classnames/bind\";\nconst cx = classnames.bind(style);\nclass SocialLogin extends Component {\n  render() {\n    const { type } = this.props;\n    return (\n      <div className={cx(\"social-login\")}>\n        <h2>\n          {type === \"login\" ? \"Login to HappReads\" : \"Sign up for HappReads\"}\n        </h2>\n        <button className={cx(\"facebook\", \"button\")}>\n          <span className={cx(\"icon\")}>\n            <FaFacebookSquare />\n          </span>\n          Continue with Facebook\n        </button>\n        <button className={cx(\"github\", \"button\")}>\n          <span className={cx(\"icon\")}>\n            <FaGithubSquare />\n          </span>\n          Continue with Github\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default SocialLogin;\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport style from \"./LoginForm.scss\";\nimport classnames from \"classnames/bind\";\nimport SocialLogin from \"../SocialLogin/SocialLogin\";\nconst cx = classnames.bind(style);\nclass LoginForm extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const { loginRequest } = this.props;\n    loginRequest(email, password);\n  };\n  handleEmail = p => {\n    this.setState({\n      email: p\n    });\n  };\n  handlePassword = p => {\n    this.setState({\n      password: p\n    });\n  };\n  render() {\n    const { email, password } = this.state;\n    return (\n      <Fragment>\n        <div className={cx(\"login-form\", \"form-container\")}>\n          <SocialLogin type=\"login\" />\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={e => this.handleEmail(e.target.value)}\n              placeholder=\"Email\"\n              required\n            />\n            <input\n              type=\"password\"\n              value={password}\n              onChange={e => this.handlePassword(e.target.value)}\n              placeholder=\"Password\"\n              required\n            />\n            <input type=\"submit\" value=\"Login\" />\n          </form>\n          <Link to=\"/signup\">\n            <button>SignUp</button>\n          </Link>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component, Fragment } from \"react\";\nimport LoginForm from \"../components/LoginForm\";\n//import Header from \"../components/Header\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../reducer/login\";\nimport { Redirect } from \"react-router\";\nclass Login extends Component {\n  state = {\n    isLoggedIn: false\n  };\n  saveATK = t => {\n    localStorage.setItem(\"atk\", t);\n  };\n  handleLogin = async (email, password) => {\n    const { loginRequest } = this.props;\n    try {\n      const response = await loginRequest(email, password);\n      const {\n        value: { data, status }\n      } = response;\n      if (status === 200) {\n        this.saveATK(data.token);\n        this.setState({\n          isLoggedIn: true\n        });\n        //window.location.href = \"/\";\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  render() {\n    const { isLoggedIn } = this.state;\n    if (isLoggedIn === true) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <Fragment>\n        <LoginForm loginRequest={this.handleLogin} />\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    login_error: state.login.error,\n    login_pending: state.login.pending,\n    login_success: state.login.success,\n    isLoggedIn: state.login.isLoggedIn,\n    profile: state.login.profile\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginRequest: (email, password) => dispatch(actions.login(email, password))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component, Fragment } from \"react\";\nimport style from \"./SignUpForm.scss\";\nimport classnames from \"classnames/bind\";\nimport SocialLogin from \"../SocialLogin/SocialLogin\";\nconst cx = classnames.bind(style);\nclass SignUpForm extends Component {\n  state = {\n    email: \"\",\n    p1: \"\",\n    p2: \"\"\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { email, p1, p2 } = this.state;\n    const { handleSignUp } = this.props;\n    if (p1 === p2) {\n      handleSignUp(email, p1);\n    }\n  };\n\n  handleEmail = q => {\n    this.setState({\n      email: q\n    });\n  };\n  handlePassword1 = q => {\n    this.setState({\n      p1: q\n    });\n  };\n  handlePassword2 = q => {\n    this.setState({\n      p2: q\n    });\n  };\n  render() {\n    const { email, p1, p2 } = this.state;\n    return (\n      <Fragment>\n        <div className={cx(\"signup-form\", \"form-container\")}>\n          <SocialLogin type=\"signup\" />\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={e => this.handleEmail(e.target.value)}\n              placeholder=\"Email\"\n              required\n            />\n            <input\n              type=\"password\"\n              value={p1}\n              onChange={e => this.handlePassword1(e.target.value)}\n              placeholder=\"Password\"\n              required\n            />\n            <input\n              type=\"password\"\n              value={p2}\n              onChange={e => this.handlePassword2(e.target.value)}\n              placeholder=\"Password Verify\"\n              required\n            />\n            <input type=\"submit\" value=\"SignUp\" />\n          </form>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default SignUpForm;\n","import { handleActions } from \"redux-actions\";\nimport axios from \"axios\";\nconst SIGNUP = \"SIGNUP\";\nconst SIGNUP_PENDING = \"SIGNUP_PENDING\";\nconst SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nconst SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\n\nconst requestSignUp = (email, password) => {\n  return axios.post(\"http://localhost:8080/signup\", {\n    email: email,\n    password: password\n  });\n};\nexport const userSignup = (email, password) => ({\n  type: SIGNUP,\n  payload: requestSignUp(email, password)\n});\nconst initialState = {\n  error: false,\n  pending: false,\n  success: false\n};\nexport default handleActions(\n  {\n    [SIGNUP_PENDING]: (state, action) => {\n      return {\n        pending: true,\n        error: false,\n        success: false\n      };\n    },\n    [SIGNUP_SUCCESS]: (state, action) => {\n      return {\n        pending: false,\n        error: false,\n        success: true\n      };\n    },\n    [SIGNUP_FAILURE]: (state, action) => {\n      return {\n        pending: false,\n        error: true,\n        success: false\n      };\n    }\n  },\n  initialState\n);\n","import React, { Component, Fragment } from \"react\";\n//import Header from \"../components/Header\";\nimport SignUpForm from \"../components/SignUpForm\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../reducer/signup\";\nimport { Redirect } from \"react-router\";\nclass SignUp extends Component {\n  handleSignUp = async (email, p) => {\n    const { requestSignUp } = this.props;\n    const res = await requestSignUp(email, p);\n    if (res.value.status === 200) {\n      this.props.history.push(\"/login\");\n    }\n  };\n  render() {\n    const { history, isLoggedIn } = this.props;\n    if (isLoggedIn) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <Fragment>\n        <SignUpForm history={history} handleSignUp={this.handleSignUp} />\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    signup_error: state.signup.error,\n    signup_pending: state.signup.pending,\n    signup_success: state.signup.success,\n    isLoggedIn: state.login.isLoggedIn\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    requestSignUp: (email, password) =>\n      dispatch(actions.userSignup(email, password))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport style from \"./UserEdit.scss\";\nimport classnames from \"classnames/bind\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst cx = classnames.bind(style);\nconst readURL = file => {\n  const render = URL.createObjectURL(file);\n  document.querySelector(\".preview-img\").src = render;\n};\nclass UserEdit extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      profile: { profile }\n    } = this.props;\n    this.state = {\n      seletedImg: null,\n      nickname: profile ? profile.name : \"\",\n      website: profile ? profile.website : \"\",\n      intro: profile ? profile.intro : \"\",\n      interest: profile ? profile.interest : \"\"\n    };\n  }\n\n  submitEdit = async () => {\n    const {\n      seletedImg,\n      email,\n      nickname,\n      website,\n      interest,\n      intro\n    } = this.state;\n    const {\n      profile: { profile }\n    } = this.props;\n    const formData = new FormData();\n    formData.append(\"avatar\", seletedImg);\n    formData.append(\"email\", profile.email);\n    formData.append(\"nickname\", nickname);\n    formData.append(\"website\", website);\n    formData.append(\"interest\", interest);\n    formData.append(\"intro\", intro);\n    try {\n      await axios.post(`http://localhost:8080/edit`, formData);\n      window.location.href = \"/me\";\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.submitEdit();\n    //form data post 요청 진행\n  };\n  handleFile = e => {\n    const {\n      target: { files }\n    } = e;\n    this.setState({\n      seletedImg: files[0]\n    });\n    readURL(files[0]);\n  };\n  handleNickName = val => {\n    this.setState({\n      nickname: val\n    });\n  };\n  handleWebSite = val => {\n    this.setState({\n      website: val\n    });\n  };\n  handleInterest = val => {\n    this.setState({\n      interest: val\n    });\n  };\n  handleIntro = val => {\n    this.setState({\n      intro: val\n    });\n  };\n  render() {\n    const { nickname, website, intro, interest, seletedImg } = this.state;\n    const { handleClose, isOpen } = this.props;\n    return (\n      <div className={cx(\"user-edit\", isOpen ? \"close\" : \"open\")}>\n        <div className={cx(\"x-button\")}>\n          <p onClick={handleClose}>\n            <span role=\"img\" aria-label=\"close\">\n              ❌\n            </span>\n          </p>\n        </div>\n        <div className={cx(\"form-container\")}>\n          <form onSubmit={this.handleSubmit}>\n            <div className={cx(\"upload-btn-wrapper\")}>\n              <img className={cx(\"preview-img\")} />\n              <div style={{ position: \"relative\" }}>\n                <button className={cx(\"btn\")}>\n                  {seletedImg === null ? \"이미지 업로드\" : seletedImg.name}\n                </button>\n                <input\n                  type=\"file\"\n                  name=\"avatar\"\n                  onChange={e => this.handleFile(e)}\n                />\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              name=\"nickname\"\n              value={nickname}\n              onChange={e => this.handleNickName(e.target.value)}\n            />\n            <input\n              type=\"email\"\n              name=\"website\"\n              placeholder=\"웹 사이트 ex) http://www.example.com\"\n              value={website}\n              onChange={e => this.handleWebSite(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              name=\"interest\"\n              placeholder=\"취미\"\n              value={interest}\n              onChange={e => this.handleInterest(e.target.value)}\n            />\n            <textarea\n              name=\"intro\"\n              placeholder=\"소개\"\n              value={intro}\n              onChange={e => this.handleIntro(e.target.value)}\n            />\n            <input type=\"submit\" value=\"수정\" />\n          </form>\n          <button onClick={handleClose}>취소</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserEdit;\n","import { handleActions } from \"redux-actions\";\nimport axios from \"axios\";\n\nconst GET_REVIEWS = \"GET_REVIEWS\";\nconst GET_REVIEWS_PENDING = \"GET_REVIEWS_PENDING\";\nconst GET_REVIEWS_SUCCESS = \"GET_REVIEWS_SUCCESS\";\nconst GET_REVIEWS_FAILURE = \"GET_REVIEWS_FAILURE\";\n\nconst GET_REVIEW = \"GET_REVIEW\";\nconst GET_REVIEW_PENDING = \"GET_REVIEW_PENDING\";\nconst GET_REVIEW_SUCCESS = \"GET_REVIEW_SUCCESS\";\nconst GET_REVIEW_FAILURE = \"GET_REVIEW_FAILURE\";\n\nconst POST_REVIEW = \"POST_REVIEW\";\nconst POST_REVIEW_PENDING = \"POST_REVIEW_PENDING\";\nconst POST_REVIEW_SUCCESS = \"POST_REVIEW_SUCCESS\";\nconst POST_REVIEW_FAILURE = \"POST_REVIEW_FAILURE\";\n\nconst DELETE_REVIEW = \"DELETE_REVIEW\";\nconst DELETE_REVIEW_PENDING = \"DELETE_REVIEW_PENDING\";\nconst DELETE_REVIEW_SUCCESS = \"DELETE_REVIEW_SUCCESS\";\nconst DELETE_REVIEW_FAILURE = \"DELETE_REVIEW_FAILURE\";\n\nconst EDIT_REVIEW = \"EDIT_REVIEW\";\nconst EDIT_REVIEW_PENDING = \"EDIT_REVIEW_PENDING\";\nconst EDIT_REVIEW_SUCCESS = \"EDIT_REVIEW_SUCCESS\";\nconst EDIT_REVIEW_FAILURE = \"EDIT_REVIEW_FAILURE\";\nconst requestGetReviews = () => {\n  return axios.get(`http://localhost:8080/reviews`);\n};\nconst requestGetReview = isbn => {\n  return axios.get(`http://localhost:8080/book/${isbn}/review`);\n};\nconst requestPostReview = (isbn, name, content, book) => {\n  //console.log(isbn, name, content);\n  return axios.post(`http://localhost:8080/book/${isbn}/review`, {\n    name,\n    isbn,\n    content,\n    book\n  });\n};\nconst requestDeleteReview = (uid, isbn, rid, from) => {\n  return axios.post(`http://localhost:8080/book/${isbn}/review/${rid}`, {\n    uid,\n    from\n  });\n};\nconst requestEditReview = (rid, content) => {\n  return axios.post(`http://localhost:8080/book/review/${rid}`, {\n    content\n  });\n};\n\nexport const getReviews = () => ({\n  type: GET_REVIEWS,\n  payload: requestGetReviews()\n});\nexport const getReview = isbn => ({\n  type: GET_REVIEW,\n  payload: requestGetReview(isbn)\n});\nexport const postReview = (isbn, name, content, book) => ({\n  type: POST_REVIEW,\n  payload: requestPostReview(isbn, name, content, book)\n});\nexport const deleteReview = (uid, isbn, rid, from) => ({\n  type: DELETE_REVIEW,\n  payload: requestDeleteReview(uid, isbn, rid, from)\n});\nexport const editReview = (rid, content) => ({\n  type: EDIT_REVIEW,\n  payload: requestEditReview(rid, content)\n});\nconst initialState = {\n  reviews: [],\n  pending: false,\n  error: false,\n  success: false\n};\nexport default handleActions(\n  {\n    [GET_REVIEWS_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false,\n        success: false\n      };\n    },\n    [GET_REVIEWS_SUCCESS]: (state, action) => {\n      const {\n        data: { reviews }\n      } = action.payload;\n      return {\n        reviews: reviews,\n        pending: false,\n        error: false,\n        success: true\n      };\n    },\n    [GET_REVIEWS_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true,\n        success: false\n      };\n    },\n    [POST_REVIEW_PENDING]: (state, action) => {\n      return {\n        ...state,\n        error: false,\n        pending: true,\n        success: false\n      };\n    },\n    [POST_REVIEW_SUCCESS]: (state, action) => {\n      return {\n        reviews: action.payload.data.reviews,\n        error: false,\n        pending: false,\n        success: true\n      };\n    },\n    [POST_REVIEW_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        error: true,\n        pending: false,\n        success: false\n      };\n    },\n    [GET_REVIEW_PENDING]: (state, action) => {\n      return {\n        ...state,\n        error: false,\n        pending: true,\n        success: false\n      };\n    },\n    [GET_REVIEW_SUCCESS]: (state, action) => {\n      return {\n        reviews: action.payload.data.reviews,\n        error: false,\n        pending: false,\n        success: true\n      };\n    },\n    [GET_REVIEW_FAILURE]: (state, action) => {\n      return {\n        error: true,\n        pending: false,\n        success: false\n      };\n    },\n    [DELETE_REVIEW_PENDING]: (state, action) => {\n      return {\n        reviews: action.payload.data.reviews,\n        pending: true,\n        error: false,\n        success: false\n      };\n    },\n    [DELETE_REVIEW_SUCCESS]: (state, action) => {\n      return {\n        pending: true,\n        error: false,\n        success: false\n      };\n    },\n    [DELETE_REVIEW_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true,\n        success: false\n      };\n    },\n    [EDIT_REVIEW_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false,\n        success: false\n      };\n    },\n    [EDIT_REVIEW_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n        reviews: action.payload.data.reviews,\n        pending: false,\n        error: false,\n        success: true\n      };\n    },\n    [EDIT_REVIEW_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true,\n        success: false\n      };\n    }\n  },\n  initialState\n);\n","import React, { Component } from \"react\";\nimport classname from \"classnames/bind\";\nimport style from \"./ReviewModal.scss\";\nimport { connect } from \"react-redux\";\nimport * as userActions from \"../../reducer/login\";\nimport * as reviewActions from \"../../reducer/review\";\n\nconst cx = classname.bind(style);\nclass ReviewModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: props.review.content\n    };\n  }\n  checkUser = async () => {\n    const atk = localStorage.getItem(\"atk\");\n    const { checkUser } = this.props;\n    if (atk) {\n      try {\n        await checkUser(atk);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  editReview = async (rid, content) => {\n    const { editReview, handleClose } = this.props;\n    try {\n      const {\n        value: { status }\n      } = await editReview(rid, content);\n      if (status === 200) {\n        this.checkUser();\n        handleClose();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { content } = this.state;\n    const {\n      review: { _id: rid },\n      profile\n    } = this.props;\n    if (profile !== {}) {\n      this.editReview(rid, content);\n    }\n  };\n  handleChange = e => {\n    this.setState({\n      content: e.target.value\n    });\n  };\n  render() {\n    const { review, handleClose } = this.props;\n    const { content } = this.state;\n    return (\n      <div className={cx([\"review-modal\", \"modal-container\"])}>\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className={cx(\"form-container\")}>\n              <img\n                src={review.book !== undefined ? review.book.thumbnail : \"\"}\n                alt={review.book !== undefined ? review.book.title : \"\"}\n              />\n              <form onSubmit={this.handleSubmit}>\n                <textarea value={content} onChange={this.handleChange}>\n                  {content}\n                </textarea>\n                <input type=\"submit\" value=\"수정\" />\n                <button className={cx(\"cancel\")} onClick={handleClose}>\n                  취소\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    profile: state.login.profile\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkUser: atk => dispatch(userActions.check(atk)), //유저 로그인 상태 체크\n    editReview: (rid, content) =>\n      dispatch(reviewActions.editReview(rid, content))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewModal);\n","import ReviewModal from \"./ReviewModal\";\n\nexport default ReviewModal;\n","import React, { Component, Fragment } from \"react\";\nimport style from \"./UserReview.scss\";\nimport classnames from \"classnames/bind\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../reducer/login\";\nimport { FaHeart, FaTrash, FaEdit } from \"react-icons/fa\";\nimport ReviewModal from \"../ReviewModal\";\nconst cx = classnames.bind(style);\nclass UserReview extends Component {\n  state = {\n    review: null,\n    isOpen: false\n  };\n  handleLike = e => {\n    const { currentTarget } = e;\n    const id = currentTarget.getAttribute(\"data-value\");\n    this.postLike(\"like\", id);\n  };\n  handleEdit = (currentTarget, review) => {\n    console.log(currentTarget.getAttribute(\"data-value\"));\n    this.setState({\n      isOpen: true,\n      review\n    });\n  };\n  handleClose = () => {\n    this.setState({\n      isOpen: false,\n      review: null\n    });\n  };\n  handleDelete = e => {\n    const { currentTarget } = e;\n    const bid = currentTarget.getAttribute(\"data-value\");\n    console.log(bid);\n  };\n  postLike = async (type, id) => {\n    const { me, postLike, profile } = this.props;\n    try {\n      await postLike(type, id, profile._id, me.profile._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  getReview = (review, handleLike, handleDelete, handleEdit, mid, uid) => {\n    console.log(mid, uid);\n    return (\n      <Fragment>\n        <div\n          className={cx(\"review-container\")}\n          id={review._id}\n          key={review._id}\n        >\n          <div>\n            <img\n              src={review.book !== undefined ? review.book.thumbnail : \"\"}\n              alt={review.book !== undefined ? review.book.title : \"\"}\n            />\n          </div>\n          <div>\n            <div>\n              <p className={cx(\"review-book\")}>\n                {review.book !== undefined ? review.book.title : \"\"}\n              </p>\n              <p className={cx(\"review-text\")}>\n                {review.book !== undefined ? review.content : \"\"}\n              </p>\n              <p className={cx(\"review-date\")}>\n                {moment(review.createdAt).format(\"YYYY년 MM월 DD일 HH:MM:SS\")}\n              </p>\n              <p\n                className={cx(\"like-container\")}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginTop: \"5px\"\n                }}\n              >\n                <span className={cx(\"review-like\")}>{review.likes} likes</span>\n                <span> · </span>\n                <span\n                  className={cx(\"likebtn\")}\n                  onClick={handleLike}\n                  data-value={review._id}\n                >\n                  <FaHeart />\n                </span>\n              </p>\n            </div>\n          </div>\n          {uid === mid ? (\n            <>\n              <span\n                className={cx(\"review-edit\")}\n                data-value={review._id}\n                onClick={e => handleEdit(e.currentTarget, review)}\n              >\n                <FaEdit />\n              </span>\n              <span\n                className={cx(\"review-remove\")}\n                data-value={review._id}\n                onClick={handleDelete}\n              >\n                <FaTrash />\n              </span>\n            </>\n          ) : (\n            <></>\n          )}\n        </div>\n      </Fragment>\n    );\n  };\n  render() {\n    const {\n      profile: { _id, reviews },\n      me\n    } = this.props;\n    const { isOpen, review } = this.state;\n    return (\n      <div className={cx(\"user-review\")}>\n        {reviews.map(review => {\n          return this.getReview(\n            review,\n            this.handleLike,\n            this.handleDelete,\n            this.handleEdit,\n            me.profile._id,\n            _id\n          );\n        })}\n        {isOpen && (\n          <ReviewModal review={review} handleClose={this.handleClose} />\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    me: state.login.profile\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    postLike: (type, id, uid) => dispatch(actions.postLike(type, id, uid))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserReview);\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n//import { FaPlusCircle } from \"react-icons/fa\";\nimport BookList from \"../BookList\";\nimport style from \"./UserProfile.scss\";\nimport classnames from \"classnames/bind\";\nimport im from \"../../img/1.jpg\";\nimport UserEdit from \"../UserEdit\";\nimport UserReview from \"../UserReview/UserReview\";\n\nconst cx = classnames.bind(style);\nconst openEdit = (isOpen, handleClose, profile) => {\n  return (\n    <Fragment>\n      <div\n        className={cx(\"modal-overay\", isOpen ? \"open-modal\" : \"close-modal\")}\n      />\n      <div className={cx(isOpen ? \"open-modal\" : \"close-modal\")}>\n        <UserEdit\n          handleClose={handleClose}\n          profile={profile}\n          isOpen={!isOpen}\n        />\n      </div>\n    </Fragment>\n  );\n};\nconst getList = (from, profile, type) => {\n  if (type !== \"uploaded\") {\n    return from === \"/me\" ? (\n      profile && profile.profile && profile.profile[type].length > 0 ? (\n        <div>\n          <BookList\n            booklist={profile.profile[type]}\n            from=\"profile\"\n            type={type}\n          />\n        </div>\n      ) : (\n        <p className={cx(\"recent-empty\")}>최근 아무 활동도 없습니다.</p>\n      )\n    ) : profile && profile.user && profile.user[type].length > 0 ? (\n      <div>\n        <BookList booklist={profile.user[type]} from=\"profile\" />\n      </div>\n    ) : (\n      <p className={cx(\"recent-empty\")}>최근 아무 활동도 없습니다.</p>\n    );\n  } else {\n    return from === \"/me\" ? (\n      profile && profile.profile && profile.profile.uploaded.length > 0 ? (\n        <div className={cx(\"uploaded-list\")}>\n          {profile.profile.uploaded.map(book => {\n            return (\n              <div className={cx(\"uploaded-img-wrapper\")} key={book._id}>\n                <img\n                  className={cx(\"uploaded-img\")}\n                  src={book.thumbnail}\n                  alt={book.thumbnail}\n                />\n                <div className={cx(\"to-detail\")}>\n                  <Link to={`/book/${book.isbn}`}>{book.title}</Link>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <p className={cx(\"recent-empty\")}>최근 아무 활동도 없습니다.</p>\n      )\n    ) : profile && profile.user && profile.user.uploaded.length > 0 ? (\n      <div className={cx(\"uploaded-list\")}>\n        {profile.user.uploaded.map(book => {\n          return (\n            <div className={cx(\"uploaded-img-wrapper\")} key={book._id}>\n              <img\n                className={cx(\"uploaded-img\")}\n                src={book.thumbnail}\n                alt={book.thumbnail}\n              />\n              <div className={cx(\"to-detail\")}>\n                <Link to={`/book/${book.isbn}`}>상세 페이지</Link>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    ) : (\n      <p className={cx(\"recent-empty\")}>최근 아무 활동도 없습니다.</p>\n    );\n  }\n};\nclass UserProfile extends Component {\n  state = {\n    isOpen: false,\n    idx: 0\n  };\n  handleOpen = () => {\n    this.setState({\n      isOpen: true\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      isOpen: false\n    });\n  };\n  render() {\n    const { profile, from } = this.props;\n    const { isOpen, idx } = this.state;\n    return (\n      <Fragment>\n        <div className={cx(\"user-profile\")}>\n          <div className={cx(\"profile-wrapper\")}>\n            <div className={cx(\"info\")}>\n              <img\n                src={\n                  from === \"/me\"\n                    ? profile && profile.profile !== undefined\n                      ? profile.profile.avatarUrl\n                      : \"\"\n                    : profile && profile.user !== undefined\n                    ? profile.user.avatarUrl\n                    : \"\"\n                }\n                alt={im}\n              />\n              <h1>\n                {from === \"/me\"\n                  ? profile && profile.profile !== undefined\n                    ? profile.profile.email\n                    : \"\"\n                  : profile && profile.user !== undefined\n                  ? profile.user.email\n                  : \"\"}\n              </h1>\n              <div className={cx(\"profile-edit\")}>\n                {from === \"/me\" ? (\n                  <p to={\"/edit\"} onClick={this.handleOpen}>\n                    프로필 수정\n                  </p>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n              <div className={cx(\"rate-review\")}>\n                <p>\n                  {from === \"/me\"\n                    ? profile && profile.profile !== undefined\n                      ? profile.profile.votes.length\n                      : 0\n                    : profile && profile.user !== undefined\n                    ? profile.user.votes.length\n                    : 0}{\" \"}\n                  평가\n                </p>\n                <p>\n                  {from === \"/me\"\n                    ? profile && profile.profile !== undefined\n                      ? profile.profile.reviews.length\n                      : 0\n                    : profile && profile.user !== undefined\n                    ? profile.user.reviews.length\n                    : 0}{\" \"}\n                  리뷰\n                </p>\n              </div>\n              <p className={cx(\"intro\")}>\n                {from === \"/me\"\n                  ? profile && profile.profile !== undefined\n                    ? profile.profile.intro\n                    : 0\n                  : profile && profile.user !== undefined\n                  ? profile.user.intro\n                  : 0}\n              </p>\n            </div>\n          </div>\n          <div>\n            <ul className={cx(\"catalog-list\")}>\n              <li\n                className={idx === 0 ? cx(\"active\") : \"\"}\n                onClick={() => this.setState({ idx: 0 })}\n              >\n                책\n              </li>\n              <li\n                className={idx === 1 ? cx(\"active\") : \"\"}\n                onClick={() => this.setState({ idx: 1 })}\n              >\n                리뷰\n              </li>\n            </ul>\n            <div style={idx === 0 ? { display: \"block\" } : { display: \"none\" }}>\n              <div className={cx(\"uploaded\")}>\n                <div className={cx(\"uploaded-head\")}>\n                  <Link\n                    to={\n                      from === \"/me\"\n                        ? profile && profile.profile !== undefined\n                          ? `shelve/${profile.profile._id}`\n                          : `/`\n                        : profile && profile.user !== undefined\n                        ? `shelve/${profile.user._id}`\n                        : `/  `\n                    }\n                  >\n                    <h2>업로드 한 책</h2>\n                  </Link>\n                </div>\n                <div\n                  className={cx(\"uploaded-body\")}\n                  style={{ marginLeft: \"5px\", marginTop: \"5px\" }}\n                >\n                  {getList(from, profile, \"uploaded\")}\n                </div>\n              </div>\n              <div className={cx(\"want-read\")}>\n                <div className={cx(\"want-read-head\")}>\n                  <h2>\n                    읽을 책 (\n                    {from === \"/me\"\n                      ? profile && profile.profile !== undefined\n                        ? profile.profile.want_read.length\n                        : 0\n                      : profile && profile.user !== undefined\n                      ? profile.user.want_read.length\n                      : 0}\n                    )\n                  </h2>\n                </div>\n                <div className={cx(\"want-read-body\")}>\n                  {getList(from, profile, \"want_read\")}\n                </div>\n                <div></div>\n              </div>\n              <div className={cx(\"currently-reading\")}>\n                <div className={cx(\"currently-head\")}>\n                  <h2>\n                    현재 읽고 있는 책 (\n                    {from === \"/me\"\n                      ? profile && profile.profile !== undefined\n                        ? profile.profile.reading.length\n                        : 0\n                      : profile && profile.user !== undefined\n                      ? profile.user.reading.length\n                      : 0}\n                    )\n                  </h2>\n                </div>\n                <div className={cx(\"currently-body\")}>\n                  {getList(from, profile, \"reading\")}\n                </div>\n              </div>\n              <div className={cx(\"read\")}>\n                <div className={cx(\"read-head\")}>\n                  <h2>\n                    읽은 책 (\n                    {from === \"/me\"\n                      ? profile && profile.profile !== undefined\n                        ? profile.profile.read.length\n                        : 0\n                      : profile && profile.user !== undefined\n                      ? profile.user.read.length\n                      : 0}\n                    )\n                  </h2>\n                </div>\n                <div className={cx(\"read-body\")}>\n                  {getList(from, profile, \"read\")}\n                </div>\n              </div>\n            </div>\n            <div style={idx === 1 ? { display: \"block\" } : { display: \"none\" }}>\n              <div className={cx(\"recent-update\")}>\n                <div className={cx(\"recent-head\")}>\n                  <h2>리뷰</h2>\n                </div>\n                <div className={cx(\"recent-body\")}>\n                  {from === \"/me\" ? (\n                    profile && profile.profile !== undefined ? (\n                      <UserReview profile={profile.profile} />\n                    ) : (\n                      \"리뷰 없음\"\n                    )\n                  ) : profile && profile.user !== undefined ? (\n                    <UserReview profile={profile.user} />\n                  ) : (\n                    \"리뷰 없음\"\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {openEdit(isOpen, this.handleCancel, profile)}\n      </Fragment>\n    );\n  }\n}\n\nexport default UserProfile;\n","import { handleActions } from \"redux-actions\";\nimport axios from \"axios\";\n\nconst URL = `http://localhost:8080`;\n\nconst GET_USER = \"GET_USER\";\nconst GET_USER_PENDING = \"GET_USER_PENDING\";\nconst GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\nconst GET_USER_FAILURE = \"GET_USER_FAILURE\";\n\nconst GET_TOP_READERS = \"GET_TOP_READERS\";\nconst GET_TOP_READERS_PENDING = \"GET_TOP_READERS_PENDING\";\nconst GET_TOP_READERS_SUCCESS = \"GET_TOP_READERS_SUCCESS\";\nconst GET_TOP_READERS_FAILURE = \"GET_TOP_READERS_FAILURE\";\n\nconst GET_TOP_REVIEWERS = \"GET_TOP_REVIEWERS\";\nconst GET_TOP_REVIEWERS_PENDING = \"GET_TOP_REVIEWERS_PENDING\";\nconst GET_TOP_REVIEWERS_SUCCESS = \"GET_TOP_REVIEWERS_SUCCESS\";\nconst GET_TOP_REVIEWERS_FAILURE = \"GET_TOP_REVIEWERS_FAILURE\";\n\nconst requestUser = id => {\n  return axios.get(`${URL}/profile/${id}`);\n};\nconst requestTopReaders = type => {\n  return axios.get(`${URL}/rank/reader/${type}`);\n};\nconst requestTopReviewers = type => {\n  return axios.get(`${URL}/rank/reviewer/${type}`);\n};\n\nexport const getUser = id => ({\n  type: GET_USER,\n  payload: requestUser(id)\n});\nexport const getTopReaders = (type = 0) => ({\n  type: GET_TOP_READERS,\n  payload: requestTopReaders(type)\n});\nexport const getTopReviewers = type => ({\n  type: GET_TOP_REVIEWERS,\n  payload: requestTopReviewers(type)\n});\nconst initialState = {\n  pending: false,\n  error: false,\n  profile: {},\n  topReaders: [],\n  topReviewers: []\n};\nexport default handleActions(\n  {\n    [GET_USER_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [GET_USER_SUCCESS]: (state, action) => {\n      return {\n        pending: false,\n        error: false,\n        profile: action.payload.data\n      };\n    },\n    [GET_USER_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    },\n    [GET_TOP_READERS_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [GET_TOP_READERS_SUCCESS]: (state, action) => {\n      const {\n        data: { readers }\n      } = action.payload;\n      return {\n        ...state,\n        topReaders: readers,\n        pending: false,\n        error: false\n      };\n    },\n    [GET_TOP_READERS_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    },\n    [GET_TOP_REVIEWERS_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [GET_TOP_REVIEWERS_SUCCESS]: (state, action) => {\n      const {\n        data: { reviewers }\n      } = action.payload;\n      return {\n        ...state,\n        topReviewers: reviewers,\n        pending: false,\n        error: false\n      };\n    },\n    [GET_TOP_REVIEWERS_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    }\n  },\n  initialState\n);\n","import React, { Component, Fragment } from \"react\";\nimport UserProfile from \"../components/UserProfile\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../reducer/user\";\n\n//import { Redirect } from \"react-router\";\nclass Profile extends Component {\n  componentDidMount() {\n    const {\n      history: { location }\n    } = this.props;\n    if (location.pathname !== \"/me\") {\n      const uid = location.pathname.substring(1).split(\"/\")[1];\n      this.getProfile(uid);\n    }\n  }\n\n  getProfile = async id => {\n    const { getProfile } = this.props;\n    try {\n      await getProfile(id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  render() {\n    const {\n      isLoggedIn,\n      user,\n      profile,\n      history: { location }\n    } = this.props;\n    //console.log(this.props.history);\n    return (\n      <Fragment>\n        <UserProfile\n          isLoggedIn={isLoggedIn}\n          profile={location.pathname === \"/me\" ? profile : user}\n          from={location.pathname}\n        />\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.login.isLoggedIn,\n    profile: state.login.profile,\n    user: state.user.profile\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getProfile: id => dispatch(actions.getUser(id))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React, { Component } from \"react\";\nimport { FaStar } from \"react-icons/fa\";\nimport style from \"./Rater.scss\";\nimport classnames from \"classnames/bind\";\nimport { connect } from \"react-redux\";\nconst cx = classnames.bind(style);\nconst values = [\"1\", \"2\", \"3\", \"4\", \"5\"];\nconst starStyle = {\n  color: \"#f1c40f\",\n  cursor: \"pointer\"\n};\nclass Rater extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoveredRating: \"0\",\n      currentRating: \"0\"\n    };\n  }\n\n  handleOnClick = e => {\n    const { isLoggedIn } = this.props;\n    let currentItem = e.target;\n    while (currentItem.nodeName !== \"svg\") {\n      currentItem = currentItem.parentNode;\n    }\n    const rating = currentItem.dataset.rating;\n    if (isLoggedIn) this.postVote(rating);\n    else alert(\"Please Login\");\n  };\n  postVote = async vote => {\n    const {\n      book: { isbn, title, authors, thumbnail },\n      profile: {\n        profile: { email }\n      },\n      postVote\n    } = this.props;\n    //const isbn = window.location.pathname.substring(1).split(\"/\")[1];\n    await postVote(title, authors, vote, isbn.split(\" \")[0], email, thumbnail);\n  };\n  render() {\n    //const { currentRating } = this.state;\n    const { votes } = this.props;\n    return (\n      <div className={cx(\"rater\")}>\n        {values.map((value, idx) => {\n          return (\n            <FaStar\n              key={idx}\n              data-rating={idx + 1}\n              onClick={this.handleOnClick}\n              style={votes >= idx + 1 ? starStyle : {}}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.login.isLoggedIn,\n    profile: state.login.profile\n  };\n};\nexport default connect(mapStateToProps)(Rater);\n","import React, { Component, Fragment } from \"react\";\nimport style from \"./Review.scss\";\nimport classnames from \"classnames/bind\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { FaHeart } from \"react-icons/fa\";\nimport * as actions from \"../../reducer/review\";\nimport * as loginActions from \"../../reducer/login\";\n\nconst cx = classnames.bind(style);\nconst reviewTag = (item, idx, handleLike) => {\n  console.log(item);\n  return (\n    <Fragment key={idx}>\n      <div>\n        <div>\n          <Link to={item.reviewer ? `/profile/${item.reviewer._id}` : \"\"}>\n            <img\n              className={cx(\"user-img\")}\n              src={item.reviewer ? item.reviewer.avatarUrl : \"\"}\n              alt={item.reviewer ? item.reviewer.avatarUrl : \"\"}\n            />\n            <span className={cx(\"user\")}>\n              {item.reviewer ? item.reviewer.email : \"\"}\n            </span>\n          </Link>\n        </div>\n        <span className={cx(\"date\")}>\n          {item.createdAt\n            ? moment(item.createdAt).format(`MMMM MM월 DD일 HH:MM:SS`)\n            : \"\"}\n        </span>\n        <div style={{ marginTop: \"10px\" }}>\n          <span className={cx(\"user-review\")}>{item.content}</span>\n        </div>\n        <div className={cx(\"review-footer\")}>\n          <span>{item.likes} likes</span>\n          <span style={{ marginLeft: \"5px\", marginRight: \"5px\" }}>·</span>\n          <span\n            className={cx(\"heart\")}\n            onClick={handleLike}\n            data-value={item._id}\n          >\n            <FaHeart />\n          </span>\n          <span style={{ marginLeft: \"5px\", marginRight: \"5px\" }}>·</span>\n          <span className={cx(\"more\")}>see more</span>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nclass Review extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\"\n    };\n  }\n  componentDidMount() {\n    this.getReview();\n  }\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.reviews &&\n      prevProps.reviews &&\n      this.props.reviews.length !== prevProps.reviews.length\n    )\n      this.getReview();\n  }\n  getReview = async () => {\n    const { id, getReviews } = this.props;\n    try {\n      await getReviews(id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  postReview = async content => {\n    const {\n      profile: {\n        profile: { email }\n      },\n      postReview,\n      books: book\n    } = this.props;\n    const id = window.location.pathname.substring(1).split(\"/\")[1];\n    try {\n      await postReview(id, email, content, book[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  handleChange = input => {\n    this.setState({\n      input: input\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { isLoggedIn } = this.props;\n    const { input } = this.state;\n    if (isLoggedIn) {\n      this.postReview(input);\n      this.setState({\n        input: \"\"\n      });\n    } else {\n      alert(\"Please Login\");\n    }\n  };\n  handleLike = e => {\n    const { currentTarget } = e;\n    const id = currentTarget.getAttribute(\"data-value\");\n    this.postLike(\"like\", id);\n  };\n  postLike = async (type, id) => {\n    const { me, postLike, profile } = this.props;\n    try {\n      await postLike(type, id, profile._id, me.profile._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  render() {\n    const { input } = this.state;\n    const { reviews } = this.props;\n    return (\n      <div className={cx(\"review\")}>\n        <p>리뷰</p>\n        <div>\n          <div className={cx(\"form-container\")}>\n            <form onSubmit={this.handleSubmit}>\n              <textarea\n                onChange={e => this.handleChange(e.target.value)}\n                value={input}\n              />\n              <input type=\"submit\" value=\"등록\" />\n            </form>\n          </div>\n          <div className={cx(\"review-list-wrapper\")}>\n            {reviews !== undefined ? (\n              reviews.map((item, idx) => {\n                return reviewTag(item, idx, this.handleLike);\n              })\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    pending: state.review.pending,\n    error: state.review.error,\n    success: state.review.success,\n    isLoggedIn: state.login.isLoggedIn,\n    profile: state.login.profile,\n    reviews: state.review.reviews,\n    books: state.books.books\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    postReview: (isbn, name, content, book) =>\n      dispatch(actions.postReview(isbn, name, content, book)),\n    getReviews: isbn => dispatch(actions.getReview(isbn)),\n    postLike: (type, id, uid) => dispatch(loginActions.postLike(type, id, uid))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Review);\n","import React, { Component, Fragment } from \"react\";\nimport { FaPlusCircle, FaStar, FaAngleDown } from \"react-icons/fa\";\nimport style from \"./BookDetail.scss\";\nimport classnames from \"classnames/bind\";\nimport { ChasingDots } from \"better-react-spinkit\";\nimport Select from \"react-select\";\nimport Rater from \"../Rater\";\nimport Review from \"../Review\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../reducer/login\";\nconst cx = classnames.bind(style);\nconst formatAuthors = authors => {\n  let s = \"\";\n  for (let i = 0; i < authors.length; i++) {\n    s += `${authors[i]} `;\n  }\n  return s;\n};\nconst getAvg = votes => {\n  if (votes) {\n    let total = 0;\n    if (votes.length > 0) {\n      for (let i = 0; i < votes.length; i++) {\n        total += parseInt(votes[i].vote);\n      }\n      console.log(total);\n      return (total / votes.length).toFixed(2);\n    } else {\n      return 0;\n    }\n  } else {\n    return 0;\n  }\n};\n\nconst options = [\n  {\n    value: \"want_read\",\n    label: \"읽기\"\n  },\n  {\n    value: \"reading\",\n    label: \"읽는중\"\n  },\n  {\n    value: \"read\",\n    label: \"읽음\"\n  }\n];\nclass BookDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      status: \"읽기\"\n    };\n  }\n  async componentDidMount() {\n    this.getStatus();\n  }\n  checkStatus = (arr, isbn) => {\n    if (arr.filter(item => item.isbn === isbn).length > 0) return true;\n    return false;\n  };\n  checkUserVote = () => {\n    const {\n      votes,\n      profile: { profile }\n    } = this.props;\n    let cur = \"0\";\n    if (votes) {\n      for (let i = 0; i < votes.length; i++) {\n        if (votes[i]._id === profile._id) {\n          cur = String(votes[i].vote);\n          break;\n        }\n      }\n    }\n    return cur;\n  };\n  getStatus = () => {\n    const {\n      profile: { profile },\n      id: isbn\n    } = this.props;\n    if (profile) {\n      if (this.checkStatus(profile.want_read, isbn)) {\n        this.setState({\n          selected: options[0],\n          status: options[0].label\n        });\n        return;\n      }\n      if (this.checkStatus(profile.reading, isbn)) {\n        this.setState({\n          selected: options[1],\n          status: options[1].label\n        });\n        return;\n      }\n      if (this.checkStatus(profile.read, isbn)) {\n        this.setState({\n          selected: options[2],\n          status: options[2].label\n        });\n        return;\n      }\n    }\n  };\n  handleOnClick = async () => {\n    const {\n      selected: { value }\n    } = this.state;\n    const {\n      postShelve,\n      book: { title, authors, thumbnail },\n      profile: {\n        profile: { email }\n      }\n    } = this.props;\n    const id = window.location.pathname.substring(1).split(\"/\")[1];\n    try {\n      await postShelve(email, id, title, authors, value, thumbnail);\n    } catch (error) {}\n  };\n  handleRadio = selected => {\n    this.setState({ selected }, () =>\n      console.log(`Selected: ${this.state.selected}`)\n    );\n  };\n  render() {\n    const { book, votes, postVote, id, reviews } = this.props;\n    const { selected, status } = this.state;\n    return (\n      <Fragment>\n        {book ? (\n          <Fragment>\n            <div className={cx(\"book-detail\")}>\n              <div className={cx(\"book-info-wrapper\")}>\n                <div className={cx(\"img-col\")}>\n                  <img src={book.thumbnail} alt=\"geisha\" />\n                </div>\n                <div className={cx(\"book-content\")}>\n                  <h2 className={cx(\"title\")}>{book.title}</h2>\n                  <p className={cx(\"author\")}>{formatAuthors(book.authors)}</p>\n                  <div className={cx(\"bookmeta\")}>\n                    <span className={cx(\"score\")}>\n                      <FaStar />\n                      {getAvg(votes)}\n                      <FaAngleDown className={cx(\"angle-down\")} />\n                    </span>\n                    <span className={cx(\"rate-cnt\")}>\n                      {votes ? votes.length : 0} 평가\n                    </span>\n                    <span className={cx(\"review-cnt\")}>\n                      {reviews ? reviews.length : 0} 리뷰\n                    </span>\n                  </div>\n                  <span className={cx(\"discription\")}>{book.contents}</span>\n                  <div>\n                    <div className={cx(\"rate-wrapper\")}>\n                      <span>책 평가하기</span>\n                      <Rater\n                        postVote={postVote}\n                        book={book}\n                        id={id}\n                        votes={\n                          votes && votes.length > 0 ? this.checkUserVote() : \"0\"\n                        }\n                      />\n                    </div>\n                    <div className={cx(\"add\")}>\n                      <Select\n                        className={cx(\"select\")}\n                        options={options}\n                        onChange={this.handleRadio}\n                        value={selected}\n                        isSearchable={false}\n                        placeholder={status}\n                      />\n                      <button\n                        className={cx(\"want-read\")}\n                        onClick={this.handleOnClick}\n                      >\n                        <span>\n                          <FaPlusCircle />\n                        </span>\n                        등록\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <Review id={id} />\n          </Fragment>\n        ) : (\n          <ChasingDots color=\"white\" size={60} />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postShelve: (email, isbn, title, authors, type, thumbnail) =>\n      dispatch(actions.postShelve(email, isbn, title, authors, type, thumbnail))\n  };\n};\nexport default connect(null, mapDispatchToProps)(BookDetail);\n","import React, { Component, Fragment } from \"react\";\nimport BookDetail from \"../components/BookDetail\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../reducer/books\";\n//import * as reviewActions from \"../reducer/review\";\n\nclass Detail extends Component {\n  state = {\n    avg_vote: 0.0\n  };\n  componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      }\n    } = this.props;\n    window.scrollTo(0, 0);\n    // console.log(id);\n    this.getBook(id);\n  }\n  getBook = async id => {\n    const { getBook, getAvg_Reviews } = this.props;\n    try {\n      Promise.all([await getBook(id), await getAvg_Reviews(id)]); //.then(info => {console.log(\"Done\");});\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  render() {\n    const {\n      match: {\n        params: { id }\n      },\n      books,\n      votes,\n      reviews,\n      postVote,\n      profile\n    } = this.props;\n    return (\n      <Fragment>\n        <div className=\"main-container\">\n          <BookDetail\n            book={books[0]}\n            id={id}\n            postVote={postVote}\n            votes={votes}\n            reviews={reviews}\n            profile={profile}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    pending: state.books.pending,\n    error: state.books.error,\n    books: state.books.books,\n    vote_error: state.books.vote_error,\n    vote_pending: state.books.vote_pending,\n    vote_success: state.books.vote_success,\n    votes: state.books.votes,\n    reviews: state.review.reviews,\n    profile: state.login.profile\n  };\n};\nconst mapDispathToProps = dispatch => {\n  return {\n    getBook: q => dispatch(actions.getDetail(q)),\n    getAvg_Reviews: isbn => dispatch(actions.getInfo(isbn)),\n    postVote: (title, authors, vote, isbn, name, thumbnail) =>\n      dispatch(actions.postBook(title, authors, vote, isbn, name, thumbnail))\n  };\n};\nexport default connect(mapStateToProps, mapDispathToProps)(Detail);\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport style from \"./Footer.scss\";\nimport classnames from \"classnames/bind\";\nconst cx = classnames.bind(style);\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className={cx(\"footer\")}>\n        <div className={cx(\"footer_icon\")}></div>\n        <span className={cx(\"footer_text\")}>\n          &copy; HappReads {moment().format(\"YYYY\")}\n        </span>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component, Fragment } from \"react\";\nimport BookList from \"../components/BookList\";\nimport * as actions from \"../reducer/books\";\nimport { connect } from \"react-redux\";\nconst searchResult = books => {\n  return (\n    <Fragment>\n      <BookList booklist={books} from=\"search\" />\n    </Fragment>\n  );\n};\nconst style = {\n  form: {\n    height: \"80px\",\n    width: \"450px\",\n    margin: \"0 auto\"\n  },\n  text: {\n    width: \"100%\",\n    padding: \"5px\",\n    fontSize: \"12px\"\n  }\n};\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    const type = window.location.search.split(\"type=\")[1];\n    this.state = {\n      keyword: null,\n      type: type ? type : \"0\",\n      page: 1,\n      isSubmited: false\n    };\n  }\n  componentDidMount() {\n    const {\n      location: { search }\n    } = this.props;\n    const q = decodeURI(search)\n      .split(\"=\")[1]\n      .replace(/[%20]/gi, \" \")\n      .split(\"&\")[0];\n    const type = window.location.search.split(\"type=\")[1];\n    this.getBooks(q, type);\n    window.addEventListener(\"scroll\", this.handleScroll); //스크롤 이벤트 추가\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll); //스크롤 이벤트 제거\n  }\n  getBooks = async (q, type, page = 1) => {\n    const { getBooks } = this.props;\n    try {\n      await getBooks(q, type, page);\n      //console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  getMoreBooks = async (q, type, page = 1) => {\n    const { getMoreBooks } = this.props;\n    try {\n      await getMoreBooks(q, type, page);\n      //console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  handleScroll = () => {\n    const { innerHeight } = window;\n    const { scrollHeight } = document.body;\n    const scrollTop =\n      (document.documentElement && document.documentElement.scrollTop) ||\n      document.body.scrollTop;\n    const {\n      location: { search }\n    } = this.props;\n    const { page } = this.state;\n    const q = decodeURI(search)\n      .split(\"=\")[1]\n      .replace(/[%20]/gi, \" \")\n      .split(\"&\")[0];\n    const type = window.location.search.split(\"type=\")[1];\n    if (scrollHeight - innerHeight - scrollTop < 100) {\n      //스크롤링 했을때, 브라우저의 가장 밑에서 100정도 높이가 남았을때에 실행하기위함.\n      this.getMoreBooks(q, type, page + 1);\n      this.setState({\n        page: page + 1\n      });\n      //console.log(\"Search Next\");\n    }\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { keyword, type } = this.state;\n    this.props.history.push(`/search?p=${keyword}&type=${type} `);\n    this.setState({\n      isSubmited: true\n    });\n    this.getBooks(keyword, type);\n  };\n  handleChange = query => {\n    this.setState({\n      keyword: query\n    });\n  };\n  handleAll = () => {\n    this.setState({\n      type: \"0\"\n    });\n  };\n  handleBook = () => {\n    this.setState({\n      type: \"1\"\n    });\n  };\n  handleAuthor = () => {\n    this.setState({\n      type: \"2\"\n    });\n  };\n  render() {\n    const {\n      location: { search },\n      books,\n      keyword\n    } = this.props;\n    const { type } = this.state;\n    const q = decodeURI(search)\n      .split(\"=\")[1]\n      .replace(/[%20]/gi, \" \");\n    return (\n      <Fragment>\n        <div style={{ marginTop: \"73px\" }}>\n          <h1 style={{ marginLeft: \"10px\", paddingTop: \"10px\" }}>\n            <span style={{ fontWeight: \"800\" }}>검색</span> >{\" \"}\n            {q.substring(0, q.length - 5)}\n          </h1>\n          <div className=\"form-container\" style={style.form}>\n            <form style={{ width: \"100%\" }} onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                style={style.text}\n                placeholder=\"책/저자 검색\"\n                value={keyword}\n                onChange={e => this.handleChange(e.target.value)}\n              />\n              <div style={{ marginTop: \"10px\" }}>\n                <input\n                  type=\"radio\"\n                  name=\"check\"\n                  value=\"all\"\n                  onChange={this.handleAll}\n                  checked={type === \"0\"}\n                />\n                <label>모든</label>\n                <input\n                  type=\"radio\"\n                  name=\"check\"\n                  value=\"book\"\n                  onChange={this.handleBook}\n                  checked={type === \"1\"}\n                />\n                <label>책</label>\n                <input\n                  type=\"radio\"\n                  name=\"check\"\n                  value=\"author\"\n                  onChange={this.handleAuthor}\n                  checked={type === \"2\"}\n                />\n                <label> 작가</label>\n              </div>\n            </form>\n          </div>\n          {searchResult(books)}\n        </div>\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    pending: state.books.pending,\n    error: state.books.error,\n    books: state.books.books\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getMoreBooks: (q, type = 0, page = 1) =>\n      dispatch(actions.getMore(q, type, page)),\n    getBooks: (q, type = 0, page = 1) =>\n      dispatch(actions.getBooks(q, type, page))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, { Component } from \"react\";\n//import Header from \"../components/Header\";\nimport UserEdit from \"../components/UserEdit\";\nimport { connect } from \"react-redux\";\nclass Edit extends Component {\n  render() {\n    const { history, profile } = this.props;\n    return (\n      <div>\n        <UserEdit history={history} profile={profile} />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.login.isLoggedIn,\n    profile: state.login.profile\n  };\n};\nexport default connect(mapStateToProps)(Edit);\n","import { handleActions } from \"redux-actions\";\nimport axios from \"axios\";\n\nconst UPLOAD = \"UPLOAD\";\nconst UPLOAD_PENDING = \"UPLOAD_PENDING\";\nconst UPLOAD_SUCCESS = \"UPLOAD_SUCCESS\";\nconst UPLOAD_FAILURE = \"UPLOAD_FAILURE\";\nconst requestUpload = data => {\n  return axios.post(`http://localhost:8080/upload`, data);\n};\nexport const postUpload = data => ({\n  type: UPLOAD,\n  payload: requestUpload(data)\n});\nconst initialState = {\n  pending: false,\n  error: false,\n  success: false\n};\nexport default handleActions(\n  {\n    [UPLOAD_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [UPLOAD_SUCCESS]: (state, action) => {\n      return {\n        success: true,\n        pending: false,\n        error: false\n      };\n    },\n    [UPLOAD_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    }\n  },\n  initialState\n);\n","import React, { Component } from \"react\";\nimport classnames from \"classnames/bind\";\nimport style from \"./BookUpload.scss\";\nimport { connect } from \"react-redux\";\nimport { v4 } from \"uuid\";\nimport * as actions from \"../../reducer/upload\";\nconst cx = classnames.bind(style);\nconst authorTag = (authors, handleDeleteTag) => {\n  return authors.map(author => {\n    const uid = v4();\n    return (\n      <div className={cx(\"author-tag\")} key={uid}>\n        <span className={cx(\"author-name\")}>{author}</span>\n        <span className={cx(\"author-x\")} onClick={handleDeleteTag}>\n          x\n        </span>\n      </div>\n    );\n  });\n};\nclass BookUpload extends Component {\n  state = {\n    selected: null,\n    title: \"\",\n    authors: [],\n    author: \"\",\n    isbn: \"\",\n    contents: \"\"\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { selected, title, authors, isbn, contents } = this.state;\n    const {\n      profile: {\n        profile: { _id }\n      }\n    } = this.props;\n    const formData = new FormData();\n    formData.append(\"thumbnail\", selected);\n    formData.append(\"title\", title);\n    formData.append(\"authors\", authors);\n    formData.append(\"isbn\", isbn);\n    formData.append(\"contents\", contents);\n    formData.append(\"uid\", _id);\n    //console.log(title, authors, isbn, contents);\n    this.submitData(formData);\n  };\n  handleAuthorChange = input => {\n    this.setState({\n      author: input\n    });\n  };\n  handleKeyPress = key => {\n    const { author, authors } = this.state;\n    if (author !== \"\") {\n      if (key === 13) {\n        this.setState({\n          authors: [...authors, author],\n          author: \"\"\n        });\n      }\n    }\n  };\n  handleDeleteTag = e => {\n    const { authors } = this.state;\n    const target = e.target.previousSibling.innerHTML;\n    let newAuthors = authors.filter(author => {\n      return author !== target;\n    });\n    //console.log(newAuthors);\n    this.setState({\n      authors: newAuthors\n    });\n  };\n  handleFile = e => {\n    const {\n      target: { files }\n    } = e;\n    this.setState({\n      selected: files[0]\n    });\n    const imgURL = URL.createObjectURL(files[0]);\n    document.querySelector(\".preview-img\").src = imgURL;\n  };\n  handleTitle = title => {\n    this.setState({\n      title: title\n    });\n  };\n  handleContents = contents => {\n    this.setState({\n      contents: contents\n    });\n  };\n  handleIsbn = isbn => {\n    this.setState({\n      isbn: isbn\n    });\n  };\n  submitData = async data => {\n    const { postUpload } = this.props;\n    try {\n      await postUpload(data);\n      window.location.href = \"/\";\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  render() {\n    const { title, isbn, contents, author, authors, selected } = this.state;\n    return (\n      <div className={cx(\"book-upload\")}>\n        <div className={cx(\"form-container\")}>\n          <form onSubmit={this.handleSubmit}>\n            <div className={cx(\"upload-btn-wrapper\")}>\n              <img className={cx(\"preview-img\")} alt=\"\" />\n              <div style={{ position: \"relative\" }}>\n                <button className={cx(\"btn\")}>이미지 선택</button>\n                <input type=\"file\" onChange={this.handleFile} required />\n              </div>\n            </div>\n\n            <input\n              type=\"text\"\n              value={title}\n              onChange={e => this.handleTitle(e.target.value)}\n              placeholder=\"책 이름\"\n              required\n            />\n            <div className={cx(\"authors\")}>\n              {authorTag(authors, this.handleDeleteTag)}\n              <input\n                className={cx(\"author-input\")}\n                type=\"text\"\n                placeholder=\"저자 +\"\n                value={author}\n                onChange={e => this.handleAuthorChange(e.target.value)}\n                onKeyDown={e => this.handleKeyPress(e.keyCode)}\n              />\n            </div>\n            <input\n              type=\"text\"\n              value={isbn}\n              onChange={e => this.handleIsbn(e.target.value)}\n              placeholder=\"ISBN\"\n              required\n            />\n            <textarea\n              placeholder=\"요약\"\n              value={contents}\n              onChange={e => this.handleContents(e.target.value)}\n              required\n            />\n            <input type=\"submit\" value=\"제출\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    pending: state.upload.pending,\n    error: state.upload.error,\n    success: state.upload.success,\n    profile: state.login.profile\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    postUpload: data => dispatch(actions.postUpload(data))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BookUpload);\n","import React, { Component, Fragment } from \"react\";\nimport BookUpload from \"../components/BookUpload/BookUpload\";\nclass Upload extends Component {\n  render() {\n    return (\n      <Fragment>\n        <BookUpload />\n      </Fragment>\n    );\n  }\n}\n\nexport default Upload;\n","import React, { useState, Fragment } from \"react\";\nimport { withRouter } from \"react-router\";\nimport style from \"./SearchBar.scss\";\nimport classnames from \"classnames/bind\";\nconst cx = classnames.bind(style);\nconst SearchBar = ({ match, location, history }) => {\n  const [keyword, setKeyword] = useState(\"\");\n  const handleChangeKeyword = query => {\n    setKeyword(query);\n  };\n  const handleSubmit = e => {\n    history.push(`/search?p=${keyword}`);\n    e.preventDefault();\n  };\n  console.log(match, location, history);\n  return (\n    <Fragment>\n      <div className={cx(\"search-bar\")}>\n        <form className={cx(\"form-container\")} onSubmit={handleSubmit}>\n          <input\n            type=\"input\"\n            placeholder=\"책 검색...\"\n            value={keyword}\n            name=\"q\"\n            onChange={e => handleChangeKeyword(e.target.value)}\n          />\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default withRouter(SearchBar);\n","import React, { Component, Fragment } from \"react\";\nimport style from \"./Header.scss\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport classnames from \"classnames/bind\";\nimport SearchBar from \"../SearchBar\";\nimport { connect } from \"react-redux\";\nimport * as loginActions from \"../../reducer/login\";\nimport * as bookActions from \"../../reducer/books\";\n\nconst cx = classnames.bind(style);\nconst LinkContainer = (\n  isLoggedIn,\n  clickMenu,\n  showMenu,\n  requestLogOut,\n  profile\n) => {\n  if (isLoggedIn) {\n    return (\n      <Fragment>\n        <li>\n          <span>\n            <img\n              src={profile.profile ? profile.profile.avatarUrl : \"\"}\n              alt={\"me\"}\n              onClick={clickMenu}\n              style={{ width: \"40px\", height: \"40px\", borderRadius: \"50%\" }}\n            />\n          </span>\n          {menu(showMenu, requestLogOut, isLoggedIn)}\n        </li>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <li className={cx(\"login\")}>\n          <Link to={\"/login\"}>로그인</Link>\n        </li>\n        <li>\n          <Link to={\"/signup\"}>가입</Link>\n        </li>\n      </Fragment>\n    );\n  }\n};\nconst menu = (showMenu, requestLogOut, isLoggedIn) => {\n  //console.log(showMenu);\n  return (\n    <div className={cx(\"menu\", `${showMenu ? \"show\" : \"\"}`)}>\n      <ul>\n        <li>\n          <Link to=\"/me\">\n            <p>프로필</p>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/upload\">\n            <p>책 업로드</p>\n          </Link>\n        </li>\n        <li onClick={() => requestLogOut()}>\n          <p>로그아웃</p>\n        </li>\n      </ul>\n      <div className={cx(\"callout\")}></div>\n    </div>\n  );\n};\nclass Header extends Component {\n  _isMounted = false;\n  state = {\n    showMenu: false,\n    lastPos: window.pageYOffset,\n    isLogOut: false\n  };\n  componentDidMount() {\n    this._isMounted = true;\n    if (this._isMounted) {\n      //window.addEventListener(\"scroll\", this.handleScroll);\n    }\n    this.checkUser();\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n    //window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  checkUser = async () => {\n    const atk = localStorage.getItem(\"atk\");\n    const { checkUser } = this.props;\n    if (atk) {\n      try {\n        await checkUser(atk);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  requestLogOut = async () => {\n    const { userLogOut } = this.props;\n    try {\n      const response = await userLogOut();\n      const {\n        value: { status }\n      } = response;\n      if (status === 200) {\n        localStorage.removeItem(\"atk\");\n        this.setState({\n          isLogOut: true\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  clickMenu = () => {\n    const { showMenu } = this.state;\n    this.setState({\n      showMenu: !showMenu\n    });\n  };\n  handleScroll = e => {\n    let currentScrollPos = window.pageYOffset;\n    const { lastPos } = this.state;\n    if (e) {\n      if (lastPos > currentScrollPos) {\n        document.querySelector(\".header\").classList.remove(\"header-up\");\n      } else {\n        document.querySelector(\".header\").classList.add(\"header-up\");\n      }\n      this.setState({\n        lastPos: currentScrollPos\n      });\n    }\n  };\n  render() {\n    const { showMenu, isLogOut } = this.state;\n    const { isLoggedIn, profile, getBooks } = this.props;\n    this.handleScroll();\n    return (\n      <div className={cx(\"header\")}>\n        <div className={cx(\"title\")}>\n          <Link to={\"/\"}>\n            <span className={cx(\"fr\")}>Happ</span>\n            <span className={cx(\"en\")}>Reads</span>\n          </Link>\n        </div>\n        {<SearchBar />}\n        <div className={cx(\"community\")}>\n          <Link to={\"/community/reviews\"}>커뮤니티</Link>\n        </div>\n        <div>\n          <ul className={cx(\"ul\")}>\n            {LinkContainer(\n              isLoggedIn,\n              this.clickMenu,\n              showMenu,\n              this.requestLogOut,\n              profile\n            )}\n          </ul>\n        </div>\n        {isLogOut && <Redirect to=\"/\" />}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.login.isLoggedIn,\n    profile: state.login.profile\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkUser: atk => dispatch(loginActions.check(atk)), //유저 로그인 상태 체크\n    userLogOut: () => dispatch(loginActions.logout()),\n    getBooks: (q, type = 0, page = 1) =>\n      dispatch(bookActions.getBooks(q, type, page))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React, { Component } from \"react\";\nimport goBack from \"../img/go_back.png\";\nconst style = {\n  padding: \"80px\",\n  textAlign: \"center\"\n};\n\nclass NoMatch extends Component {\n  render() {\n    return (\n      <div style={style}>\n        <h1\n          style={{\n            fontSize: \"2.0rem\",\n            fontWeight: \"700\",\n            marginTop: \"20px\",\n            marginBottom: \"20px\"\n          }}\n        >\n          404 Not Found\n        </h1>\n        <img\n          src={goBack}\n          style={{ height: \"250px\", marginBottom: \"10px\" }}\n          alt={\"404\"}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NoMatch;\n","import React, { useState } from \"react\";\nimport classnames from \"classnames/bind\";\nimport style from \"./Modal.scss\";\nconst cx = classnames.bind(style);\nconst convertType = { 읽음: \"read\", 읽기: \"want_read\", 읽는중: \"reading\" };\nconst Modal = ({ handleCancel, handleChange, item, type }) => {\n  const [to, setTo] = useState(convertType[type]);\n  const handleSelect = e => {\n    const { target } = e;\n    setTo(target.value);\n  };\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal-overlay\"></div>\n      <div className=\"modal\">\n        <p className={cx(\"exit\")}>\n          <span role=\"img\" aria-label=\"cancel\" onClick={handleCancel}>\n            ❌\n          </span>\n        </p>\n        <img src={item.thumbnail} alt={item.id} />\n        <div className={cx(\"status-wrapper\")}>\n          <div className={cx(\"read-status\")}>\n            <span>현재 상태:</span>\n            <p className={cx(\"current-status\")}>{type}</p>\n          </div>\n          <select\n            className={cx(\"select\")}\n            defaultValue={to}\n            onChange={handleSelect}\n          >\n            <option value={\"want_read\"}>읽을 책</option>\n            <option value={\"reading\"}>읽\b는중</option>\n            <option value={\"read\"}>읽음</option>\n          </select>\n          <div className={cx(\"button-container\")}>\n            <button\n              className={cx(\"ok-btn\")}\n              onClick={e => handleChange(item, to)}\n            >\n              수정\n            </button>\n            <button className={cx(\"cancel-btn\")} onClick={handleCancel}>\n              취소\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Modal;\n","import React, { Component, Fragment } from \"react\";\nimport style from \"./BookShelve.scss\";\nimport classnames from \"classnames/bind\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport * as userActions from \"../../reducer/user\";\nimport * as loginActions from \"../../reducer/login\";\nimport { Link } from \"react-router-dom\";\nimport BookModal from \"../BookModal\";\nconst cx = classnames.bind(style);\nlet currentItem = null;\nlet shelveHeader = null;\nconst active = target => {\n  target.classList.add(\"show\");\n  currentItem = target;\n};\nconst inactive = currentItem => {\n  currentItem.classList.remove(\"show\");\n};\nconst convertType = { 읽음: \"read\", 읽기: \"want_read\", 읽는중: \"reading\" };\nclass BookShelve extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: 1,\n      openModal: false,\n      lastPos: 90,\n      item: {},\n      status: \"\"\n    };\n  }\n  componentDidMount() {\n    const menu_ul = document.querySelector(\".menu-ul\");\n    shelveHeader = document.querySelector(\".shelve-header\");\n    window.addEventListener(\"scroll\", this.handleScroll);\n    menu_ul.addEventListener(\"click\", this.handleClick);\n    active(document.querySelector(\".menu-ul li:nth-child(1)\"));\n    this.getUser();\n    window.scrollTo(0, 0);\n  }\n  componentWillUnmount() {\n    const menu_ul = document.querySelector(\".menu-ul\");\n    window.removeEventListener(\"scroll\", this.handleScroll);\n    menu_ul.removeEventListener(\"click\", this.handleClick);\n  }\n  handleScroll = e => {\n    const menu_ul = document.querySelector(\".menu-ul\");\n    const posY = menu_ul.getBoundingClientRect().top;\n    if (e) {\n      if (posY < 50) {\n        if (!shelveHeader.classList.contains(\"fix\")) {\n          shelveHeader.classList.add(\"fix\");\n          menu_ul.classList.add(\"fix\");\n        }\n      } else {\n        shelveHeader.classList.remove(\"fix\");\n        menu_ul.classList.remove(\"fix\");\n      }\n    }\n  };\n  getUser = async () => {\n    const tmp = window.location.hash.split(\"/\");\n    const uid = tmp[tmp.length - 1]; //pathname.substring(1).split(\"/\")[1];\n    const { getUser } = this.props;\n    try {\n      await getUser(uid);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  checkType = item => {\n    const {\n      user: { user }\n    } = this.props;\n    const read = user.read;\n    const want_read = user.want_read;\n    const reading = user.reading;\n    for (let i = 0; i < want_read.length; i++) {\n      if (want_read[i].book.isbn === item.isbn) return \"읽기\";\n    }\n    for (let i = 0; i < reading.length; i++) {\n      if (reading[i].book.isbn === item.isbn) return \"읽는중\";\n    }\n    for (let i = 0; i < read.length; i++) {\n      if (read[i].book.isbn === item.isbn) return \"읽음\";\n    }\n  };\n  getBooks = val => {\n    const {\n      user: { user }\n    } = this.props;\n    const type = parseInt(val, 10);\n    if (user) {\n      if (type === 1) {\n        const read = user.read;\n        const want_read = user.want_read;\n        const reading = user.reading;\n        const all = want_read\n          .concat(reading)\n          .concat(read)\n          .sort((a, b) => {\n            return a.title > b.title ? 1 : -1;\n          });\n        const tags = all.map(item => {\n          return (\n            <tr key={item.book._id}>\n              <td>\n                <Link to={`/book/${item.isbn}`}>\n                  <img\n                    src={item.book.thumbnail}\n                    alt={item.book.thumbnail}\n                  ></img>\n                </Link>\n              </td>\n              <td>\n                <Link to={`/book/${item.book.isbn}`}>{item.book.title}</Link>\n              </td>\n              <td>\n                {item.book.authors.length > 1\n                  ? item.book.authors[0] + \"*\"\n                  : item.book.authors[0]}\n              </td>\n              <td>{0.0}</td>\n              <td>\n                {moment(item.book.createdAt).format(\"YY년MM월DD일 HH:MM:SS\")}\n              </td>\n              <td>{this.checkType(item.book)} </td>\n              <td\n                className={cx(\"settings all\")}\n                onClick={e =>\n                  this.handleSettings(\n                    e.target,\n                    item.book,\n                    this.checkType(item.book)\n                  )\n                }\n              >\n                <span>수정</span>\n                <span>X</span>\n              </td>\n            </tr>\n          );\n        });\n        return tags;\n      } else if (type === 2) {\n        const uploaded = user.uploaded;\n        console.log(uploaded);\n        const tags = uploaded.map(item => {\n          return (\n            <tr key={item._id}>\n              <td>\n                <Link to={`/book/${item.isbn}`}>\n                  <img src={item.thumbnail} alt={item.thumbnail}></img>\n                </Link>\n              </td>\n              <td>\n                <Link to={`/book/${item.isbn}`}>{item.title}</Link>\n              </td>\n              <td>\n                {item.authors.length > 1\n                  ? item.authors[0] + \"*\"\n                  : item.authors[0]}\n              </td>\n              <td>{0.0}</td>\n              <td>{moment(item.createdAt).format(\"YY년MM월DD일 HH:MM:SS\")}</td>\n              <td>업로드</td>\n              <td\n                className={cx(\"settings uploaded\")}\n                onClick={e =>\n                  this.handleSettings(e.target, item, this.checkType(item))\n                }\n              >\n                <span>수정</span>\n                <span>X</span>\n              </td>\n            </tr>\n          );\n        });\n        return tags;\n      } else if (type === 3) {\n        const want_read = user.want_read;\n        const tags = want_read.map(item => {\n          return (\n            <tr key={item.book._id}>\n              <td>\n                <Link to={`/book/${item.isbn}`}>\n                  <img\n                    src={item.book.thumbnail}\n                    alt={item.book.thumbnail}\n                  ></img>\n                </Link>\n              </td>\n              <td>\n                <Link to={`/book/${item.book.isbn}`}>{item.book.title}</Link>\n              </td>\n              <td>\n                {item.book.authors.length > 1\n                  ? item.book.authors[0] + \"*\"\n                  : item.book.authors[0]}\n              </td>\n              <td>{0.0}</td>\n              <td>\n                {moment(item.book.createdAt).format(\"YY년MM월DD일 HH:MM:SS\")}\n              </td>\n              <td>읽기</td>\n              <td\n                className={cx(\"settings want\")}\n                onClick={e =>\n                  this.handleSettings(\n                    e.target,\n                    item.book,\n                    this.checkType(item.book)\n                  )\n                }\n              >\n                <span>수정</span>\n                <span>X</span>\n              </td>\n            </tr>\n          );\n        });\n        return tags;\n      } else if (type === 4) {\n        const reading = user.reading;\n        const tags = reading.map(item => {\n          return (\n            <tr key={item._id}>\n              <td>\n                <Link to={`/book/${item.book.isbn}`}>\n                  <img\n                    src={item.book.thumbnail}\n                    alt={item.book.thumbnail}\n                  ></img>\n                </Link>\n              </td>\n              <td>\n                <Link to={`/book/${item.book.isbn}`}>{item.book.title}</Link>\n              </td>\n              <td>\n                {item.book.authors.length > 1\n                  ? item.book.authors[0] + \"*\"\n                  : item.book.authors[0]}\n              </td>\n              <td>{0.0}</td>\n              <td>\n                {moment(item.book.createdAt).format(\"YY년MM월DD일 HH:MM:SS\")}\n              </td>\n              <td>읽는중</td>\n              <td\n                className={cx(\"settings reading\")}\n                onClick={e =>\n                  this.handleSettings(\n                    e.target,\n                    item.book,\n                    this.checkType(item.book)\n                  )\n                }\n              >\n                <span>수정</span>\n                <span>X</span>\n              </td>\n            </tr>\n          );\n        });\n        return tags;\n      } else if (type === 5) {\n        const read = user.read;\n        const tags = read.map(item => {\n          return (\n            <tr key={item.book._id}>\n              <td>\n                <Link to={`/book/${item.book.isbn}`}>\n                  <img\n                    src={item.book.thumbnail}\n                    alt={item.book.thumbnail}\n                  ></img>\n                </Link>\n              </td>\n              <td>\n                <Link to={`/book/${item.book.isbn}`}>{item.book.title}</Link>\n              </td>\n              <td>\n                {item.book.authors.length > 1\n                  ? item.book.authors[0] + \"*\"\n                  : item.book.authors[0]}\n              </td>\n              <td>{0.0}</td>\n              <td>\n                {moment(item.book.createdAt).format(\"YY년MM월DD일 HH:MM:SS\")}\n              </td>\n              <td>읽음</td>\n              <td\n                className={cx(\"settings\")}\n                onClick={e =>\n                  this.handleSettings(\n                    e.target,\n                    item.book,\n                    this.checkType(item.book)\n                  )\n                }\n              >\n                <span>수정</span>\n                <span>X</span>\n              </td>\n            </tr>\n          );\n        });\n        return tags;\n      }\n    }\n    return <Fragment></Fragment>;\n  };\n  deleteShelve = async (uid, bid, type) => {\n    const { deleteShelve } = this.props;\n    try {\n      const response = await deleteShelve(uid, bid, type);\n      const {\n        value: { status }\n      } = response;\n      if (status === 200) {\n        this.getUser(uid);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  handleClick = e => {\n    const { target } = e;\n    const val = target.getAttribute(\"data-value\");\n    this.setState({\n      type: val\n    });\n    if (currentItem) {\n      inactive(currentItem);\n    }\n    active(target);\n  };\n  handleSettings = (target, item, type) => {\n    if (target.innerText === \"수정\") {\n      this.setState({\n        openModal: true,\n        item,\n        status: type\n      });\n    }\n    if (target.innerText === \"X\") {\n      const {\n        profile: { profile }\n      } = this.props;\n      this.deleteShelve(profile._id, item._id, convertType[type]);\n    }\n  };\n  handleCancel = e => {\n    this.setState({\n      openModal: false\n    });\n  };\n  handleChange = async (book, value) => {\n    const {\n      postShelve,\n      profile: { profile }\n    } = this.props;\n    //서버에 수정 요청 전송 코드입력\n    try {\n      const response = await postShelve(\n        profile.email,\n        book.isbn,\n        book.title,\n        book.authors,\n        value,\n        book.thumbnail\n      );\n      const {\n        value: { status }\n      } = response;\n      if (status === 200) {\n        this.getUser(profile.id);\n        this.setState({\n          openModal: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  render() {\n    const {\n      user: { user },\n      profile: { profile }\n    } = this.props;\n    const { type, openModal, item, status } = this.state;\n    const uid = window.location.pathname.substring(1).split(\"/\")[1];\n    return (\n      <div className={cx(\"book-shelve\")}>\n        {openModal ? (\n          <BookModal\n            handleCancel={this.handleCancel}\n            handleChange={this.handleChange}\n            item={item}\n            type={status}\n          />\n        ) : (\n          <Fragment />\n        )}\n        <div>\n          <p className={cx(\"shelve-header\")}>\n            <span>{user ? user.email : \"\"}'s </span> <span>책장</span>\n          </p>\n          <ul className={cx(\"menu-ul\")}>\n            <li data-value={1}>전체</li>\n            <li data-value={3}>읽기 ({user ? user.want_read.length : 0})</li>\n            <li data-value={4}>읽는중 ({user ? user.reading.length : 0})</li>\n            <li data-value={5}>읽음 ({user ? user.read.length : 0})</li>\n            <li data-value={2}>업로드</li>\n          </ul>\n        </div>\n        <div>\n          <table>\n            <thead>\n              <tr>\n                <th>커버</th>\n                <th>제목</th>\n                <th>저자</th>\n                <th>평균</th>\n                <th>생성 날짜</th>\n                <th>상태</th>\n                {profile && uid === profile._id ? (\n                  <th>설정</th>\n                ) : (\n                  <Fragment></Fragment>\n                )}\n              </tr>\n            </thead>\n            <tbody>{this.getBooks(type)}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    profile: state.login.profile,\n    user: state.user.profile\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUser: uid => dispatch(userActions.getUser(uid)),\n    postShelve: (email, isbn, title, authors, type, thumbnail) =>\n      dispatch(\n        loginActions.postShelve(email, isbn, title, authors, type, thumbnail)\n      ),\n    deleteShelve: (uid, bid, type) =>\n      dispatch(loginActions.deleteShelve(uid, bid, type))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BookShelve);\n","import React from \"react\";\nimport style from \"./Category.scss\";\nimport classnames from \"classnames/bind\";\nimport { Link } from \"react-router-dom\";\nconst cx = classnames.bind(style);\nconst Category = ({ path }) => {\n  return (\n    <div className={cx(\"category\")}>\n      <ul>\n        <li>\n          <Link to={`/community/reviews`}>최근 리뷰</Link>\n        </li>\n        <li>\n          <Link\n            to={`/community/top-readers`}\n            style={path === \"top-readers\" ? { fontWeight: 800 } : {}}\n          >\n            Top Readers\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={`/community/top-reviewers`}\n            style={path === \"top-reviewers\" ? { fontWeight: 800 } : {}}\n          >\n            Top Reviewers\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Category;\n","import React, { Component, Fragment } from \"react\";\nimport classnames from \"classnames/bind\";\nimport style from \"./CommunityContainer.scss\";\nimport img1 from \"../../img/1.jpg\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as reviewActions from \"../../reducer/review\";\nimport * as userActions from \"../../reducer/user\";\nimport moment from \"moment\";\nconst cx = classnames.bind(style);\nconst content = (path, info = [], handleType = null, type = null) => {\n  if (path === \"top-readers\") {\n    return (\n      <Fragment>\n        <div className={cx(\"range-container\")}>\n          <span data-value={0} data-role=\"reader\" onClick={handleType}>\n            전체\n          </span>\n          <span> | </span>\n          <span data-value={1} data-role=\"reader\" onClick={handleType}>\n            이번 주\n          </span>\n          <span> | </span>\n          <span data-value={2} data-role=\"reader\" onClick={handleType}>\n            이번 달\n          </span>\n        </div>\n        <table className={cx(\"table\")}>\n          <tbody>\n            {info.length === 0 && (\n              <tr style={{ textAlign: \"center\", border: \"none\" }}>\n                <p>기록이 없습니다.</p>\n              </tr>\n            )}\n            {info.length >= 1 &&\n              info.map((reader, idx) => {\n                return (\n                  <tr key={reader && reader._id}>\n                    <td>{idx + 1}</td>\n                    <td>\n                      <Link to={`/profile/${reader._id}`}>\n                        <img\n                          src={reader && reader.avatarUrl}\n                          alt={reader && reader.avatarUrl}\n                        />\n                      </Link>\n                    </td>\n                    <td>\n                      <Link to={`/profile/${reader._id}`}>\n                        <p>{reader && reader.email}</p>\n                      </Link>\n                      <p>책: {reader && reader.read.length} 권</p>\n                    </td>\n                    <td>\n                      <p>\n                        {parseInt(type) === 0 && <span>전체: </span>}\n                        {parseInt(type) === 1 && <span>이번 주: </span>}\n                        {parseInt(type) === 2 && <span>이번 달: </span>}\n                        <span>{reader && reader.read.length} 권</span>\n                      </p>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </Fragment>\n    );\n  }\n  if (path === \"top-reviewers\") {\n    return (\n      <Fragment>\n        <div className={cx(\"range-container\")}>\n          <span data-value={0} data-role=\"reviewer\" onClick={handleType}>\n            전체\n          </span>\n          <span> | </span>\n          <span data-value={1} data-role=\"reviewer\" onClick={handleType}>\n            이번 주\n          </span>\n          <span> | </span>\n          <span data-value={2} data-role=\"reviewer\" onClick={handleType}>\n            이번 달\n          </span>\n        </div>\n        <table className={cx(\"table\")}>\n          <tbody>\n            {info.length === 0 && (\n              <tr style={{ textAlign: \"center\", border: \"none\" }}>\n                <p>기록이 없습니다.</p>\n              </tr>\n            )}\n            {info.length > 0 &&\n              info.map((reviewer, idx) => {\n                return (\n                  <tr key={reviewer._id}>\n                    <td>{idx + 1}</td>\n                    <td>\n                      <img src={reviewer.avatarUrl} alt={reviewer.avatarUrl} />\n                    </td>\n                    <td>\n                      <p>{reviewer.email}</p>\n                      <p>{reviewer.reviews.length} 리뷰</p>\n                    </td>\n                    <td>\n                      <p>\n                        {parseInt(type) === 0 && <span>전체: </span>}\n                        {parseInt(type) === 1 && <span>이번 주: </span>}\n                        {parseInt(type) === 2 && <span>이번 달: </span>}\n                        <span>{reviewer.reviews.length} 리뷰</span>\n                      </p>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </Fragment>\n    );\n  }\n  if (path === \"reviews\") {\n    return (\n      <Fragment>\n        {info.length === 0 && (\n          <p style={{ textAlign: \"center\" }}>기록이 없습니다.</p>\n        )}\n        {info.length > 0 &&\n          info.map(review => {\n            return (\n              <div key={review && review._id} className={cx([\"card\", \"row\"])}>\n                <div className={cx(\"first-col\")}>\n                  <Link\n                    to={`/book/${review && review.book && review.book.isbn}`}\n                  >\n                    <img\n                      src={review && review.book && review.book.thumbnail}\n                      alt={review && review.book && review.book.title}\n                    />\n                  </Link>\n                </div>\n                <div className={cx(\"second-col\")}>\n                  <p className={cx(\"date\")}>\n                    {review &&\n                      moment(review.createdAt).format(\"YYYY/MM/DD HH:MM:DD\")}\n                  </p>\n                  <p className={cx(\"reviewer\")}>\n                    <Link to={`/profile/${review && review.reviewer._id}`}>\n                      {review && review.reviewer.email}\n                    </Link>\n                  </p>\n                  <h4 className={cx(\"title\")}>\n                    <Link\n                      to={`/book/${review && review.book && review.book.isbn}`}\n                    >\n                      {review && review.book && review.book.title}\n                    </Link>\n                  </h4>\n                  <div className={cx(\"content\")}>\n                    <img\n                      src={\n                        review && review.reviewer && review.reviewer.avatarUrl\n                      }\n                      alt={review && review.reviewer.email}\n                    />\n                    <p>{review && review.content}</p>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n      </Fragment>\n    );\n  }\n};\nclass CommunityContainer extends Component {\n  state = {\n    type: 0\n  };\n  componentDidMount() {\n    this.getReviews();\n    this.getTopReaders();\n    this.getTopReviewers();\n  }\n  getReviews = async () => {\n    const { getReviews } = this.props;\n    try {\n      await getReviews();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  getTopReaders = async (type = 0) => {\n    const { getTopReaders } = this.props;\n    try {\n      await getTopReaders(type);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  getTopReviewers = async (type = 0) => {\n    const { getTopReviewers } = this.props;\n    try {\n      await getTopReviewers(type);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  handleType = e => {\n    const { target } = e;\n    const value = target.getAttribute(\"data-value\");\n    const role = target.getAttribute(\"data-role\");\n    if (role === \"reader\") this.getTopReaders(value);\n    if (role === \"reviewer\") this.getTopReviewers(value);\n    this.setState({\n      type: value\n    });\n  };\n  render() {\n    const { path, reviews, topReaders, topReviewers } = this.props;\n    const { type } = this.state;\n    return (\n      <div className={cx(\"community-container\")}>\n        {path === \"reviews\" && (\n          <div className={cx(\"reviews\")}>{content(\"reviews\", reviews)}</div>\n        )}\n        {path === \"top-readers\" && (\n          <div>{content(\"top-readers\", topReaders, this.handleType, type)}</div>\n        )}\n        {path === \"top-reviewers\" && (\n          <div>\n            {content(\"top-reviewers\", topReviewers, this.handleType, type)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    reviews: state.review.reviews,\n    topReaders: state.user.topReaders,\n    topReviewers: state.user.topReviewers\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getReviews: () => dispatch(reviewActions.getReviews()),\n    getTopReaders: (type = 0) => dispatch(userActions.getTopReaders(type)),\n    getTopReviewers: (type = 0) => dispatch(userActions.getTopReviewers(type))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CommunityContainer);\n","import React, { Component, Fragment } from \"react\";\nimport Category from \"../components/Category\";\nimport CommunityContainer from \"../components/CommunityContainer/CommunityContainer\";\nclass Community extends Component {\n  render() {\n    const {\n      history: {\n        location: { pathname }\n      }\n    } = this.props;\n    const path = pathname.substr(1).split(\"/\")[1];\n    return (\n      <Fragment>\n        <div style={{ paddingTop: \"70px\" }}>\n          <Category path={path} />\n          <CommunityContainer path={path} />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Community;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./route/Home\";\nimport Login from \"./route/Login\";\nimport SignUp from \"./route/SignUp\";\nimport Profile from \"./route/Profile\";\nimport Detail from \"./route/Detail\";\nimport Footer from \"./components/Footer\";\nimport Search from \"./route/Search\";\nimport Edit from \"./route/Edit\";\nimport Upload from \"./route/Upload\";\nimport Header from \"./components/Header\";\nimport NoMatch from \"./route/NoMatch\";\nimport BookShelve from \"./components/BookShelve/BookShelve\";\nimport Community from \"./route/Community\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/book/:id\" component={Detail}></Route>\n        <Route path=\"/login\" component={Login}></Route>\n        <Route path=\"/search\" component={Search}></Route>\n        <Route path=\"/signup\" component={SignUp}></Route>\n        <Route path=\"/edit\" component={Edit}></Route>\n        <Route path=\"/me\" component={Profile}></Route>\n        <Route path=\"/upload\" component={Upload}></Route>\n        <Route path=\"/community/reviews\" component={Community}></Route>\n        <Route path=\"/community/top-readers\" component={Community}></Route>\n        <Route path=\"/community/top-reviewers\" component={Community}></Route>\n        <Route path=\"/profile/:id\" component={Profile}></Route>\n        <Route path=\"/shelve/:id\" component={BookShelve}></Route>\n        <Route component={NoMatch} />\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { handleActions } from \"redux-actions\";\nimport axios from \"axios\";\n\nconst POST_SHELVE = \"POST_SHELVE\";\nconst POST_SHELVE_PENDING = \"POST_SHELVE_PENDING\";\nconst POST_SHELVE_SUCCESS = \"POST_SHELVE_SUCCESS\";\nconst POST_SHELVE_FAILURE = \"POST_SHELVE_FAILURE\";\n\nconst requsetPostShelve = (email, isbn, title, authors, type, thumbnail) => {\n  return axios.post(`http://localhost:8080/shelve`, {\n    email,\n    isbn,\n    title,\n    authors,\n    type,\n    thumbnail\n  });\n};\nexport const postShelve = (email, isbn, title, authors, type, thumbnail) => ({\n  type: POST_SHELVE,\n  payload: requsetPostShelve(email, isbn, title, authors, type, thumbnail)\n});\nconst initialState = {\n  pending: false,\n  error: false\n};\nexport default handleActions(\n  {\n    [POST_SHELVE_PENDING]: (state, action) => {\n      return {\n        pending: true,\n        error: false\n      };\n    },\n    [POST_SHELVE_SUCCESS]: (state, action) => {},\n    [POST_SHELVE_FAILURE]: (state, action) => {\n      return {\n        pending: false,\n        error: true\n      };\n    }\n  },\n  initialState\n);\n","import { combineReducers } from \"redux\";\nimport books from \"./books\";\nimport signup from \"./signup\";\nimport login from \"./login\";\nimport review from \"./review\";\nimport shelve from \"./shelve\";\nimport user from \"./user\";\nimport upload from \"./upload\";\nconst reducer = combineReducers({\n  books,\n  signup,\n  login,\n  review,\n  shelve,\n  user,\n  upload\n});\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"../reducer\";\nimport logger from \"redux-logger\";\nimport { createPromise } from \"redux-promise-middleware\";\nconst customizePromiseMiddleware = createPromise({\n  promiseTypeSuffixes: [\"PENDING\", \"SUCCESS\", \"FAILURE\"]\n});\nconst store = createStore(reducer, applyMiddleware(customizePromiseMiddleware));\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/1.f081dab0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/go_back.62137145.png\";"],"sourceRoot":""}